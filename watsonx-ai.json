{
  "openapi": "3.0.2",
  "info": {
    "version": "ml_v1",
    "title": "watsonx.ai",
    "license": {
      "name": "IBM",
      "url": "https://www.ibm.com"
    },
    "x-alternate-name": "watsonx_ai_ml",
    "termsOfService": "https://www.ibm.com/software/sla/sladb.nsf/sla/bm-6883-09",
    "x-codegen-config": {
      "groupMethodsByTag": true,
      "cli": {
        "apiPackage": "github.ibm.com/AILifecycle/cpdctl",
        "cliPluginName": "cpdctl",
        "cliExecutableName": "",
        "serviceCommandName": "wx.ai",
        "disableConfigCommand": true
      },
      "python": {
        "apiPackage": "ibm_wxai"
      },
      "java": {
        "apiPackage": "com.ibm.cloud.watsonx.ai"
      }
    },
    "x-last-updated": "2024-06-21"
  },
  "servers": [
    {
      "url": "https://{region}.ml.cloud.ibm.com",
      "variables": {
        "region": {
          "default": "us-south",
          "enum": [
            "us-south",
            "eu-de",
            "jp-tok"
          ]
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Deployments",
      "x-cli-command-group": "Deployment",
      "description": "Manage Deployments.",
      "x-displayName": "Deployments"
    },
    {
      "name": "Foundation model specs",
      "x-cli-command-group": "Foundation model",
      "description": "Operations to query the details of the deployed foundation models.",
      "x-displayName": "Foundation model specs"
    },
    {
      "name": "Notebooks",
      "x-cli-command-group": "Notebook",
      "description": "A notebook here refers to all the information about a Jupyter Notebook, such as its name, creation time, associated project, environment, asset etc.",
      "x-displayName": "Notebooks"
    },
    {
      "name": "Notebook Versions",
      "x-cli-command-group": "Notebook version",
      "description": "A notebook can be saved in different versions. Users can revert their changes to a specific version.",
      "x-displayName": "Notebook Versions"
    },
    {
      "name": "Prompts",
      "x-cli-command-group": "Prompt",
      "description": "Prompts for foundational models.",
      "x-displayName": "Prompts"
    },
    {
      "name": "Prompt Sessions",
      "x-cli-command-group": "Prompt Session",
      "description": "Prompt sessions for foundational model inferencing.",
      "x-displayName": "Prompt Sessions"
    },
    {
      "name": "Text embeddings",
      "description": "Operations for text embeddings.",
      "x-displayName": "Text embeddings"
    },
    {
      "name": "Text generation",
      "description": "Operations to infer text from a prompt.",
      "x-displayName": "Text generation"
    },
    {
      "name": "Tokenization",
      "description": "Operations to calculate tokens.",
      "x-displayName": "Tokenization"
    },
    {
      "name": "Trainings",
      "x-cli-command-group": "Training",
      "description": "Manage Trainings.",
      "x-displayName": "Trainings"
    }
  ],
  "paths": {
    "/ml/v1/text/generation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_generation",
        "x-cli-command": "generate",
        "x-cli-command-group": "text",
        "tags": [
          "Text generation"
        ],
        "summary": "Infer text",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\n",
        "requestBody": {
          "required": true,
          "description": "From a given prompt, infer the next tokens.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextGenRequest"
              },
              "examples": {
                "request": {
                  "summary": "A request without moderations.",
                  "description": "A simple request.\n",
                  "value": {
                    "model_id": "google/flan-ul2",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
                    "parameters": {
                      "temperature": 0.8,
                      "max_new_tokens": 30
                    }
                  }
                },
                "moderations_request": {
                  "summary": "A request with moderations.",
                  "description": "A simple request with moderations.\n",
                  "value": {
                    "model_id": "google/flan-t5-xl",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Tell me how to reach the US Postal service",
                    "parameters": {
                      "max_new_tokens": 120,
                      "min_new_tokens": 100,
                      "repetition_penalty": 2
                    },
                    "moderations": {
                      "hap": {
                        "output": {
                          "enabled": true,
                          "threshold": 0.5
                        }
                      },
                      "pii": {
                        "output": {
                          "enabled": true
                        },
                        "mask": {
                          "remove_entity_value": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A response without moderations.",
                    "description": "The generated text from the model along with other details.\n",
                    "value": {
                      "model_id": "google/flan-ul2",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "4,000 km",
                          "generated_token_count": 4,
                          "input_token_count": 12,
                          "stop_reason": "eos_token"
                        }
                      ]
                    }
                  },
                  "moderated_response": {
                    "summary": "A response with moderations.",
                    "description": "The generated text from the model along with other details.\n",
                    "value": {
                      "model_id": "google/flan-t5-xl",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "c/o USPS, PO Box 3000, Washington, D.C. 20001-5000, www.usps.com, or call **************. You can also visit the website at https://www.usps.com/contactus/. You can also contact them by telephone at 1-************. You can also send an email to ***************. You can find the US Postal Service on Facebook at https://www.facebook.com/postalservice/.",
                          "generated_token_count": 118,
                          "input_token_count": 11,
                          "stop_reason": "eos_token",
                          "moderations": {
                            "pii": [
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 74,
                                  "end": 88
                                },
                                "entity": "PhoneNumber"
                              },
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 200,
                                  "end": 212
                                },
                                "entity": "PhoneNumber"
                              },
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 244,
                                  "end": 259
                                },
                                "entity": "EmailAddress"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "post request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/generation?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"model_id\": \"google/flan-t5-xxl\",\n",
                      "  \"input\": \"how far is paris from bangalore:\",\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000\n",
                      "  },\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/text/generation_stream": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_generation_stream",
        "x-cli-command": "generate-stream",
        "x-cli-command-group": "text",
        "tags": [
          "Text generation"
        ],
        "summary": "Infer text event stream",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\nThis operation will return the output tokens as a stream of events.\n",
        "requestBody": {
          "required": true,
          "description": "From a given prompt, infer the next tokens in a server-sent events (SSE) stream.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextGenRequest"
              },
              "examples": {
                "request": {
                  "summary": "A request without moderations.",
                  "description": "A simple request.\n",
                  "value": {
                    "model_id": "google/flan-ul2",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
                    "parameters": {
                      "temperature": 0.8,
                      "max_new_tokens": 30
                    }
                  }
                },
                "moderations_request": {
                  "summary": "A request with moderations.",
                  "description": "A simple request with moderations.\n",
                  "value": {
                    "model_id": "google/flan-t5-xl",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Tell me how to reach the US Postal service",
                    "parameters": {
                      "max_new_tokens": 120,
                      "min_new_tokens": 100,
                      "repetition_penalty": 2
                    },
                    "moderations": {
                      "hap": {
                        "output": {
                          "enabled": true,
                          "threshold": 0.5
                        }
                      },
                      "pii": {
                        "output": {
                          "enabled": true
                        },
                        "mask": {
                          "remove_entity_value": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation (`Content-Type: text/event-stream`).",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenStreamResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "post request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/generation_stream?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"model_id\": \"google/flan-t5-xxl\",\n",
                      "  \"input\": \"how far is paris from bangalore:\",\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000\n",
                      "  },\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/text/tokenization": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_tokenization",
        "x-cli-command": "tokenize",
        "x-cli-command-group": "text",
        "tags": [
          "Tokenization"
        ],
        "summary": "Text tokenization",
        "description": "The text tokenize operation allows you to check the conversion of provided input to tokens for a given model.\nIt splits text into words or sub-words, which then are converted to ids through a look-up table (vocabulary).\nTokenization allows the model to have a reasonable vocabulary size.\n",
        "requestBody": {
          "required": true,
          "description": "The input string to tokenize.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextTokenizeRequest"
              },
              "examples": {
                "request": {
                  "summary": "A sample request.",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "model_id": "google/flan-ul2",
                    "input": "Write a tagline for an alumni association: Together we",
                    "parameters": {
                      "return_tokens": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextTokenizeResponse"
                },
                "examples": {
                  "response": {
                    "summary": "The response with the token count.",
                    "description": "The response with the token count and the tokens, if requested.\n",
                    "value": {
                      "model_id": "google/flan-ul2",
                      "result": {
                        "token_count": 11,
                        "tokens": [
                          "Write",
                          "a",
                          "tag",
                          "line",
                          "for",
                          "an",
                          "alumni",
                          "associ",
                          "ation:",
                          "Together",
                          "we"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-tokenization.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "post request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/tokenization?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"model_id\": \"google/flan-ul2,\",\n",
                      "  \"input\": \"Write a tagline for an alumni association: Together we\",\n",
                      "  \"parameters\": {\n",
                      "    \"return_tokens\": true\n",
                      "  },\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/foundation_model_specs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/start"
        },
        {
          "$ref": "#/components/parameters/limit"
        },
        {
          "$ref": "#/components/parameters/model_filters"
        }
      ],
      "get": {
        "operationId": "list_foundation_model_specs",
        "x-cli-command": "list-models",
        "description": "Retrieve the list of deployed foundation models.\n",
        "tags": [
          "Foundation model specs"
        ],
        "summary": "List the available foundation models",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundationModels"
                },
                "examples": {
                  "foundation_model_specs": {
                    "summary": "The list of models.",
                    "description": "The models that are currently deployed in the cluster.\n",
                    "value": {
                      "total_count": 1,
                      "limit": 100,
                      "first": {
                        "href": "https://us-south.ml.cloud.ibm.com/ml/v1/foundation_model_specs?version=2023-05-02"
                      },
                      "resources": [
                        {
                          "model_id": "bigcode/starcoder",
                          "label": "starcoder-15.5b",
                          "provider": "BigCode",
                          "source": "Hugging Face",
                          "short_description": "The StarCoder models are 15.5B parameter models that can generate code from natural language descriptions",
                          "tasks": [
                            {
                              "id": "code",
                              "ratings": {
                                "quality": 3
                              }
                            }
                          ],
                          "min_shot_size": 0,
                          "input_tier": "class_2",
                          "output_tier": "class_2",
                          "number_params": "15.5b"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/foundation_model_tasks": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/start"
        },
        {
          "$ref": "#/components/parameters/limit"
        }
      ],
      "get": {
        "operationId": "list_foundation_model_tasks",
        "x-cli-command": "list-tasks",
        "description": "Retrieve the list of tasks that are supported by the foundation models.\n",
        "tags": [
          "Foundation model specs"
        ],
        "summary": "List the supported tasks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundationModelTasks"
                },
                "examples": {
                  "foundation_model_tasks": {
                    "summary": "The list of tasks.",
                    "description": "The tasks that are currently supported by models deployed in the cluster.\n",
                    "value": {
                      "total_count": 1,
                      "limit": 100,
                      "first": {
                        "href": "https://us-south.ml.cloud.ibm.com/ml/v1/foundation_model_tasks?version=2023-05-02"
                      },
                      "resources": [
                        {
                          "task_id": "question_answering",
                          "label": "Question answering",
                          "rank": 1,
                          "description": "Based on a set of documents or dynamic content, create a chatbot or a question-answering feature grounded on specific content. E.g. building a Q&A resource from a broad knowledge base, providing customer service assistance."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v4/deployments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "create_deployment",
        "x-cli-command": "create",
        "tags": [
          "Deployments"
        ],
        "summary": "Create a new watsonx.ai deployment",
        "description": "Create a new deployment, currently the only supported type is `online`.\n\nIf this is a deployment for a prompt tune then the `asset` object must exist\nand the `id` must be the `id` of the `model` that was created after the\nprompt training.\n\nIf this is a deployment for a prompt template then the `prompt_template`\nobject should\nexist and the `id` must be the `id` of the prompt template to be deployed.\n",
        "x-cli-generate-async-handler": true,
        "requestBody": {
          "description": "The deployment request entity.\n\nThe following important fields are described for each use case:\n1. Prompt template:\n   - `base_model_id`: **required**\n   - `promt_template.id`: **required**\n   - `online`: **required**\n   - `hardware_spec`: **forbidden**\n   - `hardware_request`: **forbidden**\n   - response `deployed_asset_type`: `foundation_model`\n1. Prompt tune:\n   - `asset.id`: **required**\n   - `online`: **required**\n   - `hardware_spec`: **forbidden**\n   - `hardware_request`: **forbidden**\n   - `base_model_id`: **forbidden**\n   - response `deployed_asset_type`: `prompt_tune`\n1. Custom foundation model:\n   - `asset.id`: **required**\n   - `online`: **required**\n   - `online.parameters.foundation_model`: **optional**\n   - `hardware_spec`: **forbidden**\n   - `hardware_request`: **required**\n   - `base_model_id`: **forbidden**\n   - `base_deployment_id`: **forbidden**\n   - response `deployed_asset_type`: `custom_foundation_model`\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentResourcePrototype"
              },
              "examples": {
                "prompt_tuning": {
                  "summary": "Create a prompt tune deployment.",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "name": "text_classification",
                    "asset": {
                      "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                    },
                    "online": {}
                  }
                },
                "prompt_template": {
                  "summary": "Create a prompt template deployment.",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "name": "text_classification",
                    "base_model_id": "google/flan-ul2",
                    "prompt_template": {
                      "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                    },
                    "online": {}
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Deployment created.",
            "headers": {
              "Location": {
                "description": "The location of the newly created resource (deployment).",
                "schema": {
                  "type": "string",
                  "description": "The location of the newly created resource (deployment).\n"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResource"
                },
                "examples": {
                  "prompt_tune_deployment": {
                    "summary": "A prompt tune deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "text_classification",
                        "description": "Classification prompt tuned model deployment",
                        "tags": [
                          "classification"
                        ]
                      },
                      "entity": {
                        "asset": {
                          "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                        },
                        "online": {},
                        "deployed_asset_type": "prompt_tune",
                        "base_model_id": "google/flan-ul2",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation_stream",
                              "sse": true
                            }
                          ]
                        }
                      }
                    }
                  },
                  "prompt_template_deployment": {
                    "summary": "A prompt template deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "text_classification",
                        "description": "Classification prompt template deployment",
                        "tags": [
                          "classification"
                        ]
                      },
                      "entity": {
                        "prompt_template": {
                          "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                        },
                        "online": {},
                        "deployed_asset_type": "foundation_model",
                        "base_model_id": "google/flan-t5-xl",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation_stream",
                              "sse": true
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.create"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "operationId": "list_deployments",
        "tags": [
          "Deployments"
        ],
        "summary": "Retrieve the deployments",
        "description": "Retrieve the list of deployments for the specified space or project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "name": "serving_name",
            "description": "Retrieves the deployment, if any, that contains this `serving_name`.",
            "example": "classification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag.value",
            "description": "Retrieves only the resources with the given tag value.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_id",
            "description": "Retrieves only the resources with the given asset_id,\nasset_id would be the model id.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prompt_template_id",
            "description": "Retrieves only the resources with the given prompt_template_id.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Retrieves only the resources with the given name.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Retrieves the resources filtered with the given type. There are the deployment types as well as an additional\n`prompt_template` if the deployment type includes a prompt template.\n\nThe supported deployment types are (see the description for `deployed_asset_type` in the deployment entity):\n\n1. `prompt_tune` - when a prompt tuned model is deployed.\n2. `foundation_model` - when a prompt template is used on a pre-deployed IBM provided model.\n\nThese can be combined with the flag `prompt_template` like this:\n\n1. `type=prompt_tune` - return all prompt tuned model deployments.\n2. `type=prompt_tune and prompt_template` - return all prompt tuned model deployments with a prompt template.\n3. `type=foundation_model` - return all prompt template deployments.\n4. `type=foundation_model and prompt_template` - return all prompt template deployments - this is the same as the previous query because a `foundation_model` can only exist with a prompt template.\n5. `type=prompt_template` - return all deployments with a prompt template.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conflict",
            "description": "Returns whether `serving_name` is available for use or not.\nThis query parameter cannot be combined with any other parameter except for `serving_name`.\n",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResourceCollection"
                },
                "examples": {
                  "get_all_prompt_tune_deployments": {
                    "summary": "Get all prompt tune deployments.",
                    "value": {
                      "limit": 10,
                      "first": {
                        "href": "https://us-south.ml.cloud.ibm.com/ml/v4/deployments"
                      },
                      "resources": [
                        {
                          "metadata": {
                            "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                            "created_at": "2023-05-02T16:27:51Z",
                            "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                            "name": "text_classification",
                            "description": "Classification prompt tuned model deployment",
                            "tags": [
                              "classification"
                            ]
                          },
                          "entity": {
                            "asset": {
                              "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                            },
                            "deployed_asset_type": "prompt_tune",
                            "online": {},
                            "base_model_id": "google/flan-t5-xl",
                            "status": {
                              "state": "ready",
                              "message": {
                                "level": "info",
                                "text": "The deployment is successful"
                              },
                              "inference": [
                                {
                                  "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
                                },
                                {
                                  "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                                  "sse": true
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "`serving_name` is available for use.\nReturned when `serving_name` and `conflict` query parameters are used.\n"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Returned when `serving_name` and `conflict` query parameters are used.\nThe response body will contain the reason.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.list"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v4/deployments/{deployment_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "name": "deployment_id",
          "in": "path",
          "description": "The deployment id.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "deployments_get",
        "x-cli-command": "get",
        "tags": [
          "Deployments"
        ],
        "summary": "Retrieve the deployment details",
        "description": "Retrieve the deployment details with the specified identifier.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "Deployment details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResource"
                },
                "examples": {
                  "prompt_tune_deployment": {
                    "summary": "A prompt tune deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "text_classification",
                        "description": "Classification prompt tuned model deployment",
                        "tags": [
                          "classification"
                        ]
                      },
                      "entity": {
                        "asset": {
                          "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                        },
                        "online": {},
                        "deployed_asset_type": "prompt_tune",
                        "base_model_id": "google/flan-ul2",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                              "sse": true
                            }
                          ]
                        }
                      }
                    }
                  },
                  "prompt_template_deployment": {
                    "summary": "A prompt template deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "text_classification",
                        "description": "Classification prompt template deployment",
                        "tags": [
                          "classification"
                        ]
                      },
                      "entity": {
                        "prompt_template": {
                          "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                        },
                        "online": {},
                        "deployed_asset_type": "foundation_model",
                        "base_model_id": "google/flan-t5-xl",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                              "sse": true
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.read"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "deployments_update",
        "x-cli-command": "update",
        "x-cli-generate-async-handler": true,
        "tags": [
          "Deployments"
        ],
        "summary": "Update the deployment metadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "description": "Update the deployment metadata.\nThe following parameters of deployment metadata are supported for the patch operation.\n\n- `/name`\n- `/description`\n- `/tags`\n- `/custom`\n- `/online/parameters`\n- `/asset`\n- `/prompt_template`\n- `/hardware_spec`\n- `/hardware_request`\n\nThe PATCH operation with path specified as `/online/parameters` can be used to update the `serving_name`.\n\nPatching `/asset` or `/prompt_template` should normally be used in the case when these fields already exist.\n",
        "requestBody": {
          "description": "The json patch.\n",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatch"
              }
            }
          },
          "required": true
        },
        "x-json-patch-helper-model": "DeploymentResourcePatch",
        "responses": {
          "202": {
            "description": "Deployment accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-codegen-request-body-name": "json-patch",
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.update"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "deployments_delete",
        "x-cli-command": "delete",
        "tags": [
          "Deployments"
        ],
        "summary": "Delete the deployment",
        "description": "Delete the deployment with the specified identifier.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "responses": {
          "204": {
            "description": "Deployment deleted."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.delete"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/deployments/{id_or_name}/text/generation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "deployments_text_generation",
        "x-cli-command": "text-generate",
        "tags": [
          "Deployments"
        ],
        "summary": "Infer text",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\nIf a `serving_name` is used then it must match the `serving_name` that is returned in the `inference`\nwhen the deployment was created.\n\n### Return options\n\nNote that there is currently a limitation in this operation when using `return_options`,\nfor input only `input_text` will be returned if requested,\nfor output the `input_tokens` and `generated_tokens` will not be returned.\n",
        "requestBody": {
          "description": "From a given prompt, infer the next tokens.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentTextGenRequest"
              },
              "examples": {
                "prompt_tune": {
                  "summary": "A prompt tune request.",
                  "description": "A prompt tune request.\n",
                  "value": {
                    "space_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "how far is paris from bangalore:\n",
                    "parameters": {
                      "max_new_tokens": 100
                    }
                  }
                },
                "prompt_tune_with_moderations": {
                  "summary": "A prompt tune request with moderations.",
                  "description": "A prompt tune request with moderations.\n",
                  "value": {
                    "space_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Tell me how to reach the US Postal service",
                    "parameters": {
                      "max_new_tokens": 120,
                      "min_new_tokens": 100,
                      "repetition_penalty": 2
                    },
                    "moderations": {
                      "hap": {
                        "output": {
                          "enabled": true,
                          "threshold": 0.5
                        }
                      },
                      "pii": {
                        "output": {
                          "enabled": true
                        },
                        "mask": {
                          "remove_entity_value": true
                        }
                      }
                    }
                  }
                },
                "prompt_template": {
                  "summary": "A prompt template request.",
                  "description": "A prompt template request.\n",
                  "value": {
                    "space_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "how far is paris from bangalore:\n",
                    "parameters": {
                      "max_new_tokens": 100
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenResponse"
                },
                "examples": {
                  "prompt_tune": {
                    "summary": "A prompt tune response.",
                    "description": "The generated text from the model along with other details for a prompt tune.\n",
                    "value": {
                      "model_id": "google/flan-ul2",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "4,000 km",
                          "generated_token_count": 4,
                          "input_token_count": 12,
                          "stop_reason": "eos_token"
                        }
                      ]
                    }
                  },
                  "prompt_tune_with_moderations": {
                    "summary": "A prompt tune response with moderations.",
                    "description": "The generated text from the model along with other details for a prompt tune with moderations.\n",
                    "value": {
                      "model_id": "google/flan-t5-xl",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "c/o USPS, PO Box 3000, Washington, D.C. 20001-5000, www.usps.com, or call **************. You can also visit the website at https://www.usps.com/contactus/. You can also contact them by telephone at 1-************. You can also send an email to ***************. You can find the US Postal Service on Facebook at https://www.facebook.com/postalservice/.",
                          "generated_token_count": 118,
                          "input_token_count": 11,
                          "stop_reason": "eos_token",
                          "moderations": {
                            "pii": [
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 74,
                                  "end": 88
                                },
                                "entity": "PhoneNumber"
                              },
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 200,
                                  "end": 212
                                },
                                "entity": "PhoneNumber"
                              },
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 244,
                                  "end": 259
                                },
                                "entity": "EmailAddress"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "prompt_template": {
                    "summary": "A prompt template response.",
                    "description": "The generated text from the model along with other details for a prompt template.\n",
                    "value": {
                      "model_id": "google/flan-ul2",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "4,000 km",
                          "generated_token_count": 4,
                          "input_token_count": 12,
                          "stop_reason": "eos_token"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "prompt tune",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/deployments/{id_or_name}/text/generation?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"input\": \"how far is paris from bangalore:\",\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000\n",
                      "  },\n",
                      "}'"
                    ]
                  }
                ]
              },
              {
                "name": "prompt template",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/deployments/{id_or_name}/text/generation?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000,\n",
                      "    \"prompt_variables\": {\n",
                      "      \"name\": \"joe\",\n",
                      "      \"count\": 3\n",
                      "    },\n",
                      "  },\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/deployments/{id_or_name}/text/generation_stream": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "deployments_text_generation_stream",
        "x-cli-command": "text-generate-stream",
        "tags": [
          "Deployments"
        ],
        "summary": "Infer text event stream",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\nThis operation will return the output tokens as a stream of events.\nIf a `serving_name` is used then it must match the `serving_name` that is returned in the `inference`\nwhen the deployment was created.\n\n### Return options\n\nNote that there is currently a limitation in this operation when using `return_options`,\nfor input only `input_text` will be returned if requested,\nfor output the `input_tokens` and `generated_tokens` will not be returned, also the\n`rank` and `top_tokens` will not be returned.\n",
        "requestBody": {
          "description": "From a given prompt, infer the next tokens in a server-sent events (SSE) stream.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentTextGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation (`Content-Type: text/event-stream`).",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenStreamResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "prompt tune",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/deployments/{id_or_name}/text/generation_stream?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"input\": \"how far is paris from bangalore:\",\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000\n",
                      "  },\n",
                      "}'"
                    ]
                  }
                ]
              },
              {
                "name": "prompt template",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/deployments/{id_or_name}/text/generation_stream?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000,\n",
                      "    \"prompt_variables\": {\n",
                      "      \"name\": \"joe\",\n",
                      "      \"count\": 3\n",
                      "    },\n",
                      "  },\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v4/trainings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "trainings_create",
        "tags": [
          "Trainings"
        ],
        "summary": "Create a new watsonx.ai training",
        "description": "Create a new watsonx.ai training in a project or a space.\n\nThe details of the base model and parameters for the training\nmust be provided in the `prompt_tuning` object.\n\n\nIn order to deploy the tuned model you need to follow the following steps:\n\n  1. Create a WML model asset, in a space or a project,\n     by providing the `request.json` as shown below:\n       ```\n       curl -X POST \"https://{cpd_cluster}/ml/v4/models?version=2024-01-29\" \\\n         -H \"Authorization: Bearer <replace with your token>\" \\\n         -H \"content-type: application/json\" \\\n         --data '{\n            \"name\": \"replace_with_a_meaningful_name\",\n            \"space_id\": \"replace_with_your_space_id\",\n            \"type\": \"prompt_tune_1.0\",\n            \"software_spec\": {\n              \"name\": \"watsonx-textgen-fm-1.0\"\n            },\n            \"metrics\": [ from the training job ],\n            \"training\": {\n              \"id\": \"05859469-b25b-420e-aefe-4a5cb6b595eb\",\n              \"base_model\": {\n                \"model_id\": \"google/flan-t5-xl\"\n              },\n              \"task_id\": \"generation\",\n              \"verbalizer\": \"Input: {{input}} Output:\"\n            },\n            \"training_data_references\": [\n              {\n                \"connection\": {\n                  \"id\": \"20933468-7e8a-4706-bc90-f0a09332b263\"\n                },\n                \"id\": \"file_to_tune1.json\",\n                \"location\": {\n                  \"bucket\": \"wxproject-donotdelete-pr-xeyivy0rx3vrbl\",\n                  \"path\": \"file_to_tune1.json\"\n                },\n                \"type\": \"connection_asset\"\n              }\n            ]\n          }'\n       ```\n\n\n       **Notes:**\n\n       1. If you used the training request field `auto_update_model: true`\n       then you can skip this step as the model will have been saved at\n       the end of the training job.\n       1. Rather than creating the payload for the model you can use the\n          generated `request.json` that was stored in the `results_reference`\n          field, look for the path in the field\n          `entity.results_reference.location.model_request_path`.\n       1. The model `type` must be `prompt_tune_1.0`.\n       1. The software spec name must be `watsonx-textgen-fm-1.0`.\n\n  1. Create a tuned model deployment as described in the\n     [create deployment documentation](#create-deployment).\n",
        "x-cli-generate-async-handler": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingResourcePrototype"
              },
              "examples": {
                "TrainingPromptTuningRequest": {
                  "summary": "Start a prompt tune training job.",
                  "value": {
                    "name": "my-prompt-tune-training",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "prompt_tuning": {
                      "base_model": {
                        "model_id": "google/flan-t5-xl"
                      },
                      "tuning_type": "prompt_tuning",
                      "task_id": "classification",
                      "num_epochs": 30,
                      "learning_rate": 0.4,
                      "accumulate_steps": 3,
                      "batch_size": 10,
                      "max_input_tokens": 100,
                      "max_output_tokens": 100
                    },
                    "training_data_references": [
                      {
                        "id": "tune1_data.json",
                        "location": {
                          "path": "tune1_data.json"
                        },
                        "type": "container"
                      }
                    ],
                    "auto_update_model": true,
                    "results_reference": {
                      "location": {
                        "path": "tune1/results"
                      },
                      "type": "container"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The training job has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingResource"
                },
                "examples": {
                  "TrainingPromptTuningResponse": {
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "name": "my-prompt-training",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "created_at": "2023-08-04T13:22:47.000Z"
                      },
                      "entity": {
                        "prompt_tuning": {
                          "base_model": {
                            "model_id": "google/flan-t5-xl"
                          },
                          "task_id": "classification"
                        },
                        "training_data_references": [
                          {
                            "id": "tune1_data.json",
                            "location": {
                              "path": "tune1_data.json"
                            },
                            "type": "container"
                          }
                        ],
                        "auto_update_model": true,
                        "results_reference": {
                          "location": {
                            "path": "tune1/results",
                            "training": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
                            "training_status": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
                            "assets_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
                            "model_request_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
                          },
                          "type": "container"
                        },
                        "status": {
                          "state": "completed",
                          "running_at": "2023-08-04T13:22:48.000Z",
                          "completed_at": "2023-08-04T13:22:55.289Z",
                          "metrics": [
                            {
                              "iteration": 0,
                              "ml_metrics": {
                                "loss": 4.49988
                              },
                              "timestamp": "2023-09-22T02:52:03.324Z"
                            },
                            {
                              "iteration": 1,
                              "ml_metrics": {
                                "loss": 3.86884
                              },
                              "timestamp": "2023-09-22T02:52:03.689Z"
                            },
                            {
                              "iteration": 2,
                              "ml_metrics": {
                                "loss": 4.05115
                              },
                              "timestamp": "2023-09-22T02:52:04.053Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.training.create"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Prompt tuning",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v4/trainings?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"name\": \"my-prompt-tune-training\",\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"prompt_tuning\": {\n",
                      "    \"base_model\": {\n",
                      "      \"model_id\": \"google/flan-t5-xl\"\n",
                      "    },\n",
                      "    \"task_id\": \"classification\",\n",
                      "    \"tuning_type\": \"prompt_tuning\",\n",
                      "    \"num_epochs\": 30,\n",
                      "    \"learning_rate\": 0.4,\n",
                      "    \"accumulate_steps\": 3,\n",
                      "    \"batch_size\": 10,\n",
                      "    \"max_input_tokens\": 100,\n",
                      "    \"max_output_tokens\": 100\n",
                      "  },\n",
                      "  \"training_data_references\": [\n",
                      "    {\n",
                      "      \"id\": \"tune1_data.json\",\n",
                      "      \"location\": {\n",
                      "        \"path\": \"tune1_data.json\"\n",
                      "      },\n",
                      "      \"type\": \"container\"\n",
                      "    }\n",
                      "  ],\n",
                      "  \"auto_update_model\": true,\n",
                      "  \"results_reference\": {\n",
                      "    \"location\": {\n",
                      "      \"path\": \"tune1/results\"\n",
                      "    },\n",
                      "    \"type\": \"container\"\n",
                      "  }\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "trainings_list",
        "tags": [
          "Trainings"
        ],
        "summary": "Retrieve the list of trainings",
        "description": "Retrieve the list of trainings for the specified space or project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/total_count"
          },
          {
            "name": "tag.value",
            "description": "Return only the resources with the given tag value.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "description": "Filter based on on the training job state.\n",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "queued",
                "pending",
                "running",
                "storing",
                "completed",
                "failed",
                "canceled"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingResourceCollection"
                },
                "examples": {
                  "TrainingPromptTuningResponses": {
                    "value": {
                      "limit": 100,
                      "first": {
                        "href": "https://{cluster_url}/ml/v4/trainings"
                      },
                      "total_count": 1,
                      "resources": [
                        {
                          "metadata": {
                            "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                            "name": "my-prompt-training",
                            "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                            "created_at": "2023-08-04T13:22:47.000Z"
                          },
                          "entity": {
                            "prompt_tuning": {
                              "base_model": {
                                "model_id": "google/flan-t5-xl"
                              },
                              "task_id": "classification"
                            },
                            "training_data_references": [
                              {
                                "id": "tune1_data.json",
                                "location": {
                                  "path": "tune1_data.json"
                                },
                                "type": "container"
                              }
                            ],
                            "auto_update_model": true,
                            "results_reference": {
                              "location": {
                                "path": "tune1/results",
                                "training": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
                                "training_status": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
                                "assets_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
                                "model_request_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
                              },
                              "type": "container"
                            },
                            "status": {
                              "state": "completed",
                              "running_at": "2023-08-04T13:22:48.000Z",
                              "completed_at": "2023-08-04T13:22:55.289Z",
                              "metrics": [
                                {
                                  "iteration": 0,
                                  "ml_metrics": {
                                    "loss": 4.49988
                                  },
                                  "timestamp": "2023-09-22T02:52:03.324Z"
                                },
                                {
                                  "iteration": 1,
                                  "ml_metrics": {
                                    "loss": 3.86884
                                  },
                                  "timestamp": "2023-09-22T02:52:03.689Z"
                                },
                                {
                                  "iteration": 2,
                                  "ml_metrics": {
                                    "loss": 4.05115
                                  },
                                  "timestamp": "2023-09-22T02:52:04.053Z"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.training.list"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v4/trainings/{training_id}": {
      "parameters": [
        {
          "name": "training_id",
          "in": "path",
          "description": "The training identifier.",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/SpaceId"
        },
        {
          "$ref": "#/components/parameters/ProjectId"
        }
      ],
      "get": {
        "operationId": "trainings_get",
        "tags": [
          "Trainings"
        ],
        "summary": "Retrieve the training",
        "description": "Retrieve the training with the specified identifier.\n",
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingResource"
                },
                "examples": {
                  "TrainingPromptTuningResponse": {
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "name": "my-prompt-training",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "created_at": "2023-08-04T13:22:47.000Z"
                      },
                      "entity": {
                        "prompt_tuning": {
                          "base_model": {
                            "model_id": "google/flan-t5-xl"
                          },
                          "task_id": "classification"
                        },
                        "training_data_references": [
                          {
                            "id": "tune1_data.json",
                            "location": {
                              "path": "tune1_data.json"
                            },
                            "type": "container"
                          }
                        ],
                        "auto_update_model": true,
                        "results_reference": {
                          "location": {
                            "path": "tune1/results",
                            "training": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
                            "training_status": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
                            "assets_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
                            "model_request_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
                          },
                          "type": "container"
                        },
                        "status": {
                          "state": "completed",
                          "running_at": "2023-08-04T13:22:48.000Z",
                          "completed_at": "2023-08-04T13:22:55.289Z",
                          "metrics": [
                            {
                              "iteration": 0,
                              "ml_metrics": {
                                "loss": 4.49988
                              },
                              "timestamp": "2023-09-22T02:52:03.324Z"
                            },
                            {
                              "iteration": 1,
                              "ml_metrics": {
                                "loss": 3.86884
                              },
                              "timestamp": "2023-09-22T02:52:03.689Z"
                            },
                            {
                              "iteration": 2,
                              "ml_metrics": {
                                "loss": 4.05115
                              },
                              "timestamp": "2023-09-22T02:52:04.053Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.training.get"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "trainings_delete",
        "tags": [
          "Trainings"
        ],
        "summary": "Cancel or delete the training",
        "description": "Cancel the specified training and remove it.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/hard_delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Training cancelled."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.training.delete"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/text/embeddings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_embeddings",
        "x-cli-command": "embeddings",
        "x-cli-command-group": "text",
        "tags": [
          "Text embeddings"
        ],
        "summary": "Generate embeddings",
        "description": "Generate embeddings from text input.\n\nSee the [documentation](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-embed-overview.html?context=wx&audience=wdp)\nfor a description of text embeddings.\n",
        "requestBody": {
          "required": true,
          "description": "The text input for a given model to be used to generate the embeddings.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingsRequest"
              },
              "examples": {
                "request": {
                  "summary": "A sample request.",
                  "description": "A simple request.\n",
                  "value": {
                    "model_id": "slate",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "inputs": [
                      "Youth craves thrills while adulthood cherishes wisdom."
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingsResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A sample response.",
                    "description": "An array of embeddings for each input string.\n",
                    "value": {
                      "model_id": "slate",
                      "results": [
                        {
                          "embedding": [
                            -0.006929283,
                            -0.005336422,
                            -0.024047505
                          ]
                        }
                      ],
                      "created_at": "2024-02-21T17:32:28Z",
                      "input_token_count": 10
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-embeddings.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "generate embeddings",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/embeddings?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Accept: application/json'\n",
                      "-d '{\n",
                      "  \"inputs\": [\n",
                      "    \"Youth craves thrills while adulthood cherishes wisdom.\",\n",
                      "    \"Youth seeks ambition while adulthood finds contentment.\",\n",
                      "    \"Dreams chased in youth while goals pursued in adulthood.\"\n",
                      "  ],\n",
                      "  \"model_id\": \"slate\",\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/prompt_sessions": {
      "post": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Create a new prompt session",
        "description": "This creates a new prompt session.",
        "operationId": "post_prompt_session",
        "x-cli-command": "create",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptSession"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}": {
      "get": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Get a prompt session",
        "description": "This retrieves a prompt session with the given id.",
        "operationId": "get_prompt_session",
        "x-cli-command": "get",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "name": "prefetch",
            "in": "query",
            "description": "Include the most recent entry",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptSession"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "patch": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Update a prompt session",
        "description": "This updates a prompt session with the given id.",
        "operationId": "patch_prompt_session",
        "x-cli-command": "update",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "^.{0,100}$",
                    "example": "Session 1"
                  },
                  "description": {
                    "type": "string",
                    "pattern": "^[\\s\\S]{0,250}",
                    "description": "An optional description for the prompt.",
                    "example": "My First Prompt Session"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptSession"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "delete": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Delete a prompt session",
        "description": "This deletes a prompt session with the given id.",
        "operationId": "delete_prompt_session",
        "x-cli-command": "delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}/entries": {
      "post": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Add a new prompt to a prompt session",
        "description": "This creates a new prompt associated with the given session.",
        "operationId": "post_prompt_session_entry",
        "x-cli-command": "add-entry",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptSessionEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptSessionEntry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "get": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Get entries for a prompt session",
        "description": "List entries from a given session.",
        "operationId": "get_prompt_session_entries",
        "x-cli-command": "list-entries",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "name": "bookmark",
            "in": "query",
            "description": "Bookmark from a previously limited get request",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit for results to retrieve, default 20",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Returned when search completes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptSessionEntryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}/entries/{entry_id}/chat_items": {
      "post": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Add a new chat item to a prompt session entry",
        "description": "This adds new chat items to the given entry.",
        "operationId": "post_prompt_session_entry_chat_item",
        "x-cli-command": "add-chat-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/entry_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An array containing a question chat item and an answer chat item.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/chatItem"
                },
                "minItems": 2,
                "maxItems": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}/lock": {
      "put": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Prompt session lock modifications",
        "description": "Modifies the current locked state of a prompt session.",
        "operationId": "put_prompt_session_lock",
        "x-cli-command": "update-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Override a lock if it is currently taken.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/promptLock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Returned when lock change is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promptLock"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "get": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Get current prompt session lock status",
        "description": "Retrieves the current locked state of a prompt session.",
        "operationId": "get_prompt_session_lock",
        "x-cli-command": "get-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - Returned on success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promptLock"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}/entries/{entry_id}": {
      "get": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Get a prompt session entry",
        "description": "This retrieves a prompt session entry with the given id.",
        "operationId": "get_prompt_session_entry",
        "x-cli-command": "get-entry",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/entry_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "delete": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Delete a prompt session entry",
        "description": "This deletes a prompt session entry with the given id.",
        "operationId": "delete_prompt_session_entry",
        "x-cli-command": "delete-entry",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/entry_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts": {
      "post": {
        "tags": [
          "Prompts"
        ],
        "summary": "Create a new prompt / prompt template",
        "description": "This creates a new prompt with the provided parameters.",
        "operationId": "post_prompt",
        "x-cli-command": "create",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts/{prompt_id}": {
      "get": {
        "tags": [
          "Prompts"
        ],
        "summary": "Get a prompt",
        "description": "This retrieves a prompt / prompt template with the given id.",
        "operationId": "get_prompt",
        "x-cli-command": "get",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/restrict_model_parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "patch": {
        "tags": [
          "Prompts"
        ],
        "summary": "Update a prompt",
        "description": "This updates a prompt / prompt template with the given id.",
        "operationId": "patch_prompt",
        "x-cli-command": "update",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/prompt_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returned on success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "delete": {
        "tags": [
          "Prompts"
        ],
        "summary": "Delete a prompt",
        "description": "This delets a prompt / prompt template with the given id.",
        "operationId": "delete_prompt",
        "x-cli-command": "delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/prompt_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts/{prompt_id}/lock": {
      "put": {
        "tags": [
          "Prompts"
        ],
        "summary": "Prompt lock modifications",
        "description": "Modifies the current locked state of a prompt.",
        "operationId": "put_prompt_lock",
        "x-cli-command": "update-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Override a lock if it is currently taken.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/promptLock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Returned when lock change is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promptLock"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "get": {
        "tags": [
          "Prompts"
        ],
        "summary": "Get current prompt lock status",
        "description": "Retrieves the current locked state of a prompt.",
        "operationId": "get_prompt_lock",
        "x-cli-command": "get-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - Returned on success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promptLock"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts/{prompt_id}/input": {
      "post": {
        "tags": [
          "Prompts"
        ],
        "summary": "Get the inference input string for a given prompt",
        "description": "Computes the inference input string based on state of a prompt. Optionally replaces template params",
        "operationId": "get_prompt_input",
        "x-cli-command": "get-input",
        "parameters": [
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptInputRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok - Returned on success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "input": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9-]*",
                      "description": "The prompt's input string used for inferences."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts/{prompt_id}/chat_items": {
      "post": {
        "tags": [
          "Prompts"
        ],
        "summary": "Add a new chat item to a prompt",
        "description": "This adds new chat items to the given prompt.",
        "operationId": "post_prompt_chat_item",
        "x-cli-command": "add-chat-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An array containing a question chat item and an answer chat item.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/chatItem"
                },
                "minItems": 2,
                "maxItems": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks": {
      "post": {
        "summary": "Create a new notebook.",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_create",
        "description": "Create a new notebook\n- either from scratch\n- or by copying another notebook.\n\nTo create a notebook from scratch, you need to first upload the notebook content(`ipynb` format) to the project Cloud Object Storage (COS)\nand then reference it with the attribute `file_reference`.\nThe other required attributes are `name`, `project` and `runtime`. \nThe attribute `runtime` is used to specify the environment on which the notebook runs.\n\nTo copy a notebook, you only need to provide `name` and `source_guid` in the request body.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NotebookCreateBodyInProject"
                  },
                  {
                    "$ref": "#/components/schemas/NotebookCopyBody"
                  }
                ]
              },
              "examples": {
                "createNewNotebook": {
                  "$ref": "#/components/examples/NotebookCreateBodyInProject"
                },
                "copyNotebook": {
                  "$ref": "#/components/examples/NotebookCopyBody"
                }
              }
            }
          },
          "description": "Specification of the notebook to be created.",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NotebookCreateResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          },
          "429": {
            "$ref": "#/components/responses/HTTP429Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks/list": {
      "post": {
        "description": "Retrieve the details of a large number of notebooks inside a project.",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_list",
        "summary": "Retrieve the details of a large number of notebooks inside a project.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotebookListBody"
              },
              "examples": {
                "listNotebooks": {
                  "$ref": "#/components/examples/NotebooksListBody"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "The guid of the project.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": true,
            "in": "query",
            "description": "Additional info that will be included into the notebook details.\nPossible values are:\n- runtime\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebooksListResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks/{notebook_guid}": {
      "delete": {
        "summary": "Delete a particular notebook, including the notebook asset.\n",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_delete",
        "description": "Delete a particular notebook, including the notebook asset.",
        "parameters": [
          {
            "name": "notebook_guid",
            "in": "path",
            "required": true,
            "description": "The guid of the notebook.",
            "schema": {
              "type": "string"
            },
            "x-cli-flag-name": "notebook-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful request. Notebook is deleted."
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Revert the main notebook to a version.\n",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_revert",
        "description": "Revert the main notebook to a version.",
        "parameters": [
          {
            "name": "notebook_guid",
            "in": "path",
            "required": true,
            "description": "The guid of the main notebook.",
            "schema": {
              "type": "string"
            },
            "x-cli-flag-name": "notebook-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotebookRevertBody"
              },
              "examples": {
                "revertNotebooks": {
                  "$ref": "#/components/examples/NotebookRevertBody"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookRevertResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "summary": "Update a particular notebook.\n",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_update",
        "description": "Update a particular notebook.",
        "parameters": [
          {
            "name": "notebook_guid",
            "in": "path",
            "required": true,
            "description": "The guid of the notebook.",
            "schema": {
              "type": "string"
            },
            "x-cli-flag-name": "notebook-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotebookUpdateBody"
              },
              "examples": {
                "updateNotebook": {
                  "$ref": "#/components/examples/NotebookUpdateBody"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookUpdateResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks/{notebook_guid}/versions": {
      "parameters": [
        {
          "name": "notebook_guid",
          "in": "path",
          "required": true,
          "description": "The guid of the notebook.",
          "schema": {
            "type": "string"
          },
          "x-cli-flag-name": "notebook-id"
        }
      ],
      "post": {
        "summary": "Create a new version.",
        "tags": [
          "Notebook Versions"
        ],
        "operationId": "versions_create",
        "description": "Create a version of a given notebook.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookVersionCreateResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "summary": "List the versions of a notebook.",
        "tags": [
          "Notebook Versions"
        ],
        "operationId": "versions_list",
        "description": "List all versions of a particular notebook.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookVersionsListResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks/{notebook_guid}/versions/{version_guid}": {
      "parameters": [
        {
          "name": "notebook_guid",
          "in": "path",
          "required": true,
          "description": "The guid of the notebook.",
          "schema": {
            "type": "string"
          },
          "x-cli-flag-name": "notebook-id"
        },
        {
          "name": "version_guid",
          "in": "path",
          "required": true,
          "description": "The guid of the version.",
          "schema": {
            "type": "string"
          },
          "x-cli-flag-name": "version-id"
        }
      ],
      "get": {
        "summary": "Retrieve a notebook version.",
        "tags": [
          "Notebook Versions"
        ],
        "operationId": "versions_get",
        "description": "Retrieve a particular version of a notebook.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookVersionRetrieveResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a notebook version.",
        "tags": [
          "Notebook Versions"
        ],
        "operationId": "versions_delete",
        "description": "Delete a particular version of a given notebook.\n",
        "responses": {
          "204": {
            "description": "Success. The version is deleted."
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "You can authorize using an access token obtained from the authentication endpoint, the access token needs to be prepended with `Bearer` in the `Authorization` header.\n"
      }
    },
    "schemas": {
      "DeploymentResourcePatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonPatchRequestHelper"
          },
          {
            "type": "object",
            "properties": {
              "asset": {
                "$ref": "#/components/schemas/Rel"
              }
            }
          }
        ]
      },
      "TextGenCommon": {
        "type": "object",
        "description": "A prompt to be used to infer the next tokens. Each request expects a `project_id` or a `space_id`, and the `project` or `space` must have an associated WML instance that will be used for limits and billing (if a paid plan).\n",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "string",
            "description": "The prompt to generate completions.\nNote: The method tokenizes the input internally.\nIt is recommended not to leave any trailing spaces.\n"
          }
        }
      },
      "SpaceId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]*",
        "minLength": 36,
        "maxLength": 36,
        "description": "The space that contains the resource.\nEither `space_id` or `project_id` has to be given.\n",
        "example": "3fc54cf1-252f-424b-b52d-5cdd9814987f"
      },
      "ProjectId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]*",
        "minLength": 36,
        "maxLength": 36,
        "description": "The project that contains the resource.\nEither `space_id` or `project_id` has to be given.\n",
        "example": "12ac4cf1-252f-424b-b52d-5cdd9814987f"
      },
      "TextGenLengthPenalty": {
        "type": "object",
        "description": "It can be used to exponentially increase the likelihood of the text generation terminating once a specified number of tokens have been generated.\n",
        "properties": {
          "decay_factor": {
            "type": "number",
            "description": "Represents the factor of exponential decay.\nLarger values correspond to more aggressive decay.\n",
            "minimum": 1,
            "exclusiveMinimum": true,
            "example": 2.5
          },
          "start_index": {
            "type": "integer",
            "description": "A number of generated tokens after which this should take effect.\n",
            "minimum": 0,
            "example": 5
          }
        }
      },
      "ParameterTruncateInputTokensFromStart": {
        "type": "integer",
        "description": "Represents the maximum number of input tokens accepted.\nThis can be used to avoid requests failing due to input being longer than configured limits. If the text is truncated, then it truncates the start of the input (on the left), so the end of the input will remain the same.\nIf this value exceeds the `maximum sequence length` (refer to the documentation to find this value for the model) then the call will fail if the total number of tokens exceeds the `maximum sequence length`.\n",
        "minimum": 1
      },
      "ReturnOptionProperties": {
        "type": "object",
        "description": "Properties that control what is returned.\n",
        "properties": {
          "input_text": {
            "type": "boolean",
            "description": "Include input text in the `generated_text` field.\n",
            "example": true,
            "default": false
          },
          "generated_tokens": {
            "type": "boolean",
            "description": "Include the list of individual generated tokens.\nExtra token information is included based on the other flags below.\n",
            "example": true,
            "default": false
          },
          "input_tokens": {
            "type": "boolean",
            "description": "Include the list of input tokens. Extra token information is included based\non the other flags here, but only for decoder-only models.\n",
            "example": true,
            "default": false
          },
          "token_logprobs": {
            "type": "boolean",
            "description": "Include logprob (natural log of probability) for each returned token.\nApplicable only if generated_tokens == true and/or input_tokens == true.\n",
            "example": true,
            "default": false
          },
          "token_ranks": {
            "type": "boolean",
            "description": "Include rank of each returned token.\nApplicable only if generated_tokens == true and/or input_tokens == true.\n",
            "example": true,
            "default": false
          },
          "top_n_tokens": {
            "type": "integer",
            "description": "Include top n candidate tokens at the position of each returned token.\nThe maximum value permitted is 5, but more may be returned if there is a tie for nth place.\nApplicable only if generated_tokens == true and/or input_tokens == true.\n",
            "example": 2,
            "minimum": 0
          }
        }
      },
      "TextGenParameters": {
        "type": "object",
        "description": "Properties that control the model and response.\n",
        "example": {
          "temperature": 0.8,
          "top_p": 0.5,
          "top_k": 50,
          "random_seed": 111,
          "repetition_penalty": 2,
          "min_new_tokens": 30,
          "max_new_tokens": 50
        },
        "properties": {
          "decoding_method": {
            "type": "string",
            "description": "Represents the strategy used for picking the tokens during generation of the output text.\n\nDuring text generation when parameter value is set to greedy, each successive token corresponds\nto the highest probability token given the text that has already been generated.\nThis strategy can lead to repetitive results especially for longer output sequences.\nThe alternative sample strategy generates text by picking subsequent tokens based on the\nprobability distribution of possible next tokens defined by (i.e., conditioned on) the\nalready-generated text and the top_k and top_p parameters described below.\nSee this [url](https://huggingface.co/blog/how-to-generate) for an informative article about text generation.\n",
            "enum": [
              "sample",
              "greedy"
            ],
            "default": "sample",
            "example": "greedy"
          },
          "length_penalty": {
            "$ref": "#/components/schemas/TextGenLengthPenalty"
          },
          "max_new_tokens": {
            "type": "integer",
            "description": "The maximum number of new tokens to be generated.\nThe maximum supported value for this field depends on the model being used.\n\nHow the \"token\" is defined depends on the tokenizer and vocabulary size,\nwhich in turn depends on the model. Often the tokens are a mix of full words and sub-words.\nTo learn more about tokenization, [see here](https://huggingface.co/course/chapter2/4).\n\nDepending on the users plan, and on the model being used, there may be an enforced maximum number of new tokens.\n",
            "minimum": 0,
            "default": 20,
            "example": 30
          },
          "min_new_tokens": {
            "type": "integer",
            "description": "If stop sequences are given, they are ignored until minimum tokens are generated.\n",
            "minimum": 0,
            "default": 0,
            "example": 5
          },
          "random_seed": {
            "type": "integer",
            "description": "Random number generator seed to use in sampling mode for experimental repeatability.\n",
            "minimum": 1,
            "example": 1
          },
          "stop_sequences": {
            "type": "array",
            "minItems": 0,
            "maxItems": 6,
            "uniqueItems": true,
            "description": "Stop sequences are one or more strings which will cause the text generation to stop if/when they are produced as part of the output.\nStop sequences encountered prior to the minimum number of tokens being generated will be ignored.\n",
            "example": [
              "fail"
            ],
            "items": {
              "type": "string"
            }
          },
          "temperature": {
            "type": "number",
            "description": "A value used to modify the next-token probabilities in sampling mode.\nValues less than 1.0 sharpen the probability distribution, resulting in \"less random\" output.\nValues greater than 1.0 flatten the probability distribution, resulting in \"more random\" output.\nA value of 1.0 has no effect.\n",
            "minimum": 0,
            "maximum": 2,
            "default": 1,
            "example": 1.5
          },
          "time_limit": {
            "type": "integer",
            "description": "Time limit in milliseconds - if not completed within this time, generation will stop.\nThe text generated so far will be returned along with the TIME_LIMIT stop reason.\n\nDepending on the users plan, and on the model being used, there may be an enforced maximum time limit.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 600000
          },
          "top_k": {
            "type": "integer",
            "description": "The number of highest probability vocabulary tokens to keep for top-k-filtering.\nOnly applies for sampling mode. When decoding_strategy is set to sample,\nonly the top_k most likely tokens are considered as candidates for the next generated token.\n",
            "minimum": 1,
            "maximum": 100,
            "example": 50
          },
          "top_p": {
            "type": "number",
            "description": "Similar to top_k except the candidates to generate the next token are the most likely tokens\nwith probabilities that add up to at least top_p. Also known as nucleus sampling.\nA value of 1.0 is equivalent to disabled.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "example": 0.5,
            "default": 1
          },
          "repetition_penalty": {
            "type": "number",
            "description": "Represents the penalty for penalizing tokens that have already been generated or\nbelong to the context. The value 1.0 means that there is no penalty.\n",
            "minimum": 1,
            "maximum": 2,
            "default": 1,
            "example": 1.5
          },
          "truncate_input_tokens": {
            "$ref": "#/components/schemas/ParameterTruncateInputTokensFromStart"
          },
          "return_options": {
            "$ref": "#/components/schemas/ReturnOptionProperties"
          },
          "include_stop_sequence": {
            "type": "boolean",
            "description": "Pass `false` to omit matched stop sequences from the end of the output text.\nThe default is `true`, meaning that the output will end with the stop sequence text when matched.\n",
            "default": true
          }
        }
      },
      "TextModeration": {
        "type": "object",
        "description": "Properties that control the moderation on the text.\n",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Should this moderation be enabled on the text.\n\n\nThe default value is `true` which means that if the parent object exists\nbut the `enabled` field does not exist then this is considered to be enabled.\n",
            "default": true
          },
          "threshold": {
            "type": "number",
            "description": "The threshold probability that this is a real match.\n",
            "format": "float",
            "minimum": 0,
            "maximum": 1
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ModerationProperties": {
        "type": "object",
        "description": "The properties for the moderation. Each type of moderation\nmay have additional properties that are specific to that moderation.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/TextModeration"
          },
          "output": {
            "$ref": "#/components/schemas/TextModeration"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "MaskProperties": {
        "type": "object",
        "description": "The properties specific to masking. If this object exists,\neven if it is empty, then masking will be applied.\n",
        "properties": {
          "remove_entity_value": {
            "type": "boolean",
            "description": "If this field is `true` then the entity value, that contains the text that was masked,\nwill also be removed from the output.\n",
            "default": false
          }
        }
      },
      "HapProperties": {
        "type": "object",
        "description": "The properties specific to HAP.\n",
        "properties": {
          "mask": {
            "$ref": "#/components/schemas/MaskProperties"
          }
        }
      },
      "ModerationHapProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModerationProperties"
          },
          {
            "$ref": "#/components/schemas/HapProperties"
          }
        ]
      },
      "PiiProperties": {
        "type": "object",
        "description": "The properties specific to PII.\n",
        "properties": {
          "mask": {
            "$ref": "#/components/schemas/MaskProperties"
          }
        }
      },
      "ModerationPiiProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModerationProperties"
          },
          {
            "$ref": "#/components/schemas/PiiProperties"
          }
        ]
      },
      "ModerationTextRange": {
        "type": "object",
        "description": "A range of text.\n",
        "properties": {
          "start": {
            "type": "integer",
            "description": "The start index of the range.\n",
            "minimum": 0
          },
          "end": {
            "type": "integer",
            "description": "The end index of the range. The end index is exclusive meaning that the character at this index will not be included in the range.\n",
            "minimum": 0
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "Moderations": {
        "type": "object",
        "description": "Properties that control the moderations, for usages such as `Hate and profanity` (HAP) and `Personal identifiable information` (PII) filtering. This list can be extended with new types of moderations.\n",
        "properties": {
          "hap": {
            "$ref": "#/components/schemas/ModerationHapProperties"
          },
          "pii": {
            "$ref": "#/components/schemas/ModerationPiiProperties"
          },
          "input_ranges": {
            "type": "array",
            "description": "If set, then only these ranges will be applied to the moderations. This is useful in the case that certain parts of the input text have already been checked.\n",
            "items": {
              "$ref": "#/components/schemas/ModerationTextRange"
            }
          }
        },
        "additionalProperties": {
          "$ref": "#/components/schemas/ModerationProperties"
        },
        "example": {
          "hap": {
            "output": {
              "enabled": true,
              "threshold": 0.5
            }
          },
          "pii": {
            "output": {
              "enabled": true
            },
            "mask": {
              "remove_entity_value": true
            }
          }
        }
      },
      "TextGenRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextGenCommon"
          },
          {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The `id` of the model to be used for this request.\nPlease refer to the [list of models](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models.html?context=wx).\n",
                "example": "google/flan-ul2"
              },
              "space_id": {
                "$ref": "#/components/schemas/SpaceId"
              },
              "project_id": {
                "$ref": "#/components/schemas/ProjectId"
              },
              "parameters": {
                "$ref": "#/components/schemas/TextGenParameters"
              },
              "moderations": {
                "$ref": "#/components/schemas/Moderations"
              }
            },
            "required": [
              "model_id"
            ]
          }
        ],
        "example": {
          "model_id": "google/flan-ul2",
          "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
          "parameters": {
            "temperature": 0.8,
            "max_new_tokens": 30
          },
          "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
          "moderations": {
            "hap": {
              "output": {
                "enabled": true,
                "threshold": 0.5
              }
            },
            "pii": {
              "output": {
                "enabled": true
              },
              "mask": {
                "remove_entity_value": true
              }
            }
          }
        }
      },
      "CreatedAt": {
        "type": "string",
        "format": "date-time",
        "description": "The time when the response was created.\n"
      },
      "TextGenStopReason": {
        "type": "string",
        "description": "The reason why the call stopped, can be one of:\n- not_finished - Possibly more tokens to be streamed.\n- max_tokens - Maximum requested tokens reached.\n- eos_token - End of sequence token encountered.\n- cancelled - Request canceled by the client.\n- time_limit - Time limit reached.\n- stop_sequence - Stop sequence encountered.\n- token_limit - Token limit reached.\n- error - Error encountered.\n\nNote that these values will be lower-cased so test for values case insensitive.\n",
        "enum": [
          "not_finished",
          "max_tokens",
          "eos_token",
          "cancelled",
          "time_limit",
          "stop_sequence",
          "token_limit",
          "error"
        ],
        "example": "token_limit"
      },
      "TextGenResult": {
        "type": "object",
        "properties": {
          "generated_text": {
            "type": "string",
            "description": "The text that was generated by the model.\n",
            "example": "Swimwear Unlimited- Mid-Summer Sale! ..."
          },
          "stop_reason": {
            "$ref": "#/components/schemas/TextGenStopReason"
          }
        },
        "required": [
          "generated_text",
          "stop_reason"
        ]
      },
      "TextGenTopTokenInfo": {
        "type": "object",
        "description": "The top tokens.\n",
        "properties": {
          "text": {
            "type": "string",
            "description": "The token text.\n"
          },
          "logprob": {
            "type": "number",
            "description": "The natural log of probability for the token.\n"
          }
        }
      },
      "TextGenTokenInfo": {
        "type": "object",
        "description": "The generated token.\n",
        "properties": {
          "text": {
            "type": "string",
            "description": "The token text.\n"
          },
          "logprob": {
            "type": "number",
            "description": "The natural log of probability for the token.\n"
          },
          "rank": {
            "type": "integer",
            "description": "The rank of the token relative to the other tokens.\n"
          },
          "top_tokens": {
            "type": "array",
            "description": "The top tokens.\n",
            "items": {
              "$ref": "#/components/schemas/TextGenTopTokenInfo"
            },
            "minItems": 0
          }
        }
      },
      "TextGenResultFields": {
        "type": "object",
        "properties": {
          "generated_token_count": {
            "type": "integer",
            "description": "The number of generated tokens.\n",
            "example": 3
          },
          "input_token_count": {
            "type": "integer",
            "description": "The number of input tokens consumed.\n",
            "example": 11
          },
          "seed": {
            "type": "integer",
            "description": "The seed used, if it exists.\n",
            "example": 42
          },
          "generated_tokens": {
            "type": "array",
            "description": "The list of individual generated tokens.\nExtra token information is included based on the other flags in the `return_options` of the request.\n",
            "items": {
              "$ref": "#/components/schemas/TextGenTokenInfo"
            },
            "minItems": 1,
            "example": [
              {
                "text": "_",
                "rank": 1,
                "logprob": -2.5,
                "top_tokens": [
                  {
                    "text": "_",
                    "logprob": -2.5
                  },
                  {
                    "text": "_2",
                    "logprob": -3.1777344
                  }
                ]
              },
              {
                "text": "4,000",
                "rank": 1,
                "logprob": -3.0957031,
                "top_tokens": [
                  {
                    "text": "4,000",
                    "logprob": -3.0957031
                  },
                  {
                    "text": "57",
                    "logprob": -3.3691406
                  }
                ]
              }
            ]
          },
          "input_tokens": {
            "type": "array",
            "description": "The list of input tokens.\nExtra token information is included based on the other flags in the `return_options` of the request, but for decoder-only models.\n",
            "items": {
              "$ref": "#/components/schemas/TextGenTokenInfo"
            },
            "minItems": 1,
            "example": [
              {
                "text": "_how"
              },
              {
                "text": "_far"
              },
              {
                "text": "_is"
              },
              {
                "text": "</s>"
              }
            ]
          }
        }
      },
      "TextGenResponseFields": {
        "type": "object",
        "description": "The tokens that are inferred from the prompt.\n\nNote that the events are different between a request with moderation and\na request without moderations.\nA request with moderation will have events that are on a sentence level\nand a request without moderations will have events that are on a token level.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The `id` of the model for inference.\n",
            "example": "google/flan-ul2"
          },
          "model_version": {
            "type": "string",
            "description": "The model version (using semantic versioning) if set.\n",
            "example": "1.0.1",
            "pattern": "^\\d+.\\d+.\\d+$",
            "minLength": 5,
            "maxLength": 20
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "results": {
            "type": "array",
            "description": "The generated tokens.\n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TextGenResult"
                },
                {
                  "$ref": "#/components/schemas/TextGenResultFields"
                }
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "model_id",
          "created_at",
          "results"
        ]
      },
      "Warning": {
        "type": "object",
        "description": "A warning message.\n",
        "properties": {
          "message": {
            "type": "string",
            "description": "The message.\n",
            "example": "The framework TF 1.1 is deprecated."
          },
          "id": {
            "type": "string",
            "description": "An `id` associated with the message.\n",
            "example": "2fc54cf1-252f-424b-b52d-5cdd98149871"
          },
          "more_info": {
            "type": "string",
            "description": "A reference to a more detailed explanation when available.\n"
          },
          "additional_properties": {
            "type": "object",
            "description": "Additional key-value pairs that depend on the specific warning.\n"
          }
        },
        "required": [
          "message"
        ]
      },
      "SystemDetails": {
        "type": "object",
        "description": "Optional details coming from the service and related to the API call or the associated resource.\n",
        "properties": {
          "warnings": {
            "type": "array",
            "description": "Any warnings coming from the system.\n",
            "items": {
              "$ref": "#/components/schemas/Warning"
            }
          }
        }
      },
      "System": {
        "type": "object",
        "description": "System details.\n",
        "properties": {
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        }
      },
      "TextGenResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextGenResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "ApiErrorTarget": {
        "type": "object",
        "description": "The target of the error.\n",
        "properties": {
          "type": {
            "description": "The type of the problematic field.\n",
            "type": "string",
            "enum": [
              "field",
              "query",
              "header"
            ]
          },
          "name": {
            "description": "The name of the problematic field.\n",
            "type": "string"
          }
        },
        "required": [
          "type",
          "name"
        ]
      },
      "ApiError": {
        "type": "object",
        "description": "An error message.\n",
        "properties": {
          "code": {
            "type": "string",
            "example": "missing_field",
            "description": "A simple code that should convey the general sense of the error.\n"
          },
          "message": {
            "type": "string",
            "example": "The 'name' field is required.",
            "description": "The message that describes the error.\n"
          },
          "more_info": {
            "type": "string",
            "example": "https://cloud.ibm.com/apidocs/machine-learning#models-get",
            "description": "A reference to a more detailed explanation when available.\n"
          },
          "target": {
            "$ref": "#/components/schemas/ApiErrorTarget"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "ApiErrorResponse": {
        "type": "object",
        "description": "The data returned when an error is encountered.\n",
        "properties": {
          "trace": {
            "type": "string",
            "example": "3fd543d2-36e0-4f83-9be3-5c6dd498af4f",
            "description": "An identifier that can be used to trace the request.\n"
          },
          "errors": {
            "type": "array",
            "description": "The list of errors.\n",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "required": [
          "trace",
          "errors"
        ]
      },
      "TextGenStreamResponse": {
        "description": "A set of server sent events, each event contains a response for one or more tokens. The results will be an array of events of the form `data: {<json event>}` where the schema of the individual `json event` is described below.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TextGenResponse"
        }
      },
      "TextTokenizeParameters": {
        "type": "object",
        "description": "The parameters for text tokenization.\n",
        "properties": {
          "return_tokens": {
            "type": "boolean",
            "description": "If this is `true` then the actual tokens will also be returned in the response.\n",
            "default": false,
            "example": true
          }
        }
      },
      "TextTokenizeRequest": {
        "type": "object",
        "description": "The input string to tokenize along with the associated model id and any parameters.\nOne of `space_id` or `project_id` must be provided.\n",
        "required": [
          "input",
          "model_id"
        ],
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "model_id": {
            "type": "string",
            "description": "The `id` of the model to be used for this request.\nPlease refer to the [list of models](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models.html?context=wx).\n",
            "example": "google/flan-ul2"
          },
          "input": {
            "type": "string",
            "description": "The input string to tokenize.\n",
            "example": "Write a tagline for an alumni association: Together we"
          },
          "parameters": {
            "$ref": "#/components/schemas/TextTokenizeParameters"
          }
        }
      },
      "TextTokenizeResult": {
        "type": "object",
        "description": "The result of tokenizing the input string.\n",
        "properties": {
          "token_count": {
            "type": "integer",
            "description": "The number of tokens in the input string.\n",
            "example": 11
          },
          "tokens": {
            "type": "array",
            "description": "The input string broken up into the tokens, if requested.\n",
            "items": {
              "type": "string"
            },
            "example": [
              "Write",
              "a",
              "tag",
              "line",
              "for",
              "an",
              "alumni",
              "associ",
              "ation:",
              "Together",
              "we"
            ]
          }
        },
        "required": [
          "token_count"
        ]
      },
      "TextTokenizeResponse": {
        "type": "object",
        "description": "The tokenization result.\n",
        "required": [
          "model_id",
          "result"
        ],
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The `id` of the model to be used for this request.\nPlease refer to the [list of models](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models.html?context=wx).\n",
            "example": "google/flan-ul2"
          },
          "result": {
            "$ref": "#/components/schemas/TextTokenizeResult"
          }
        }
      },
      "PaginationFirst": {
        "type": "object",
        "description": "The reference to the first item in the current page.\n",
        "properties": {
          "href": {
            "description": "The uri of the first resource returned.\n",
            "type": "string"
          }
        },
        "required": [
          "href"
        ]
      },
      "PaginationNext": {
        "type": "object",
        "description": "A reference to the first item of the next page, if any.\n",
        "properties": {
          "href": {
            "description": "The uri of the next set of resources.\n",
            "type": "string"
          }
        },
        "required": [
          "href"
        ]
      },
      "PaginationBase": {
        "type": "object",
        "properties": {
          "total_count": {
            "description": "Computed explicitly only when 'total_count=true' query parameter is present.\nThis is in order to avoid performance penalties.\n",
            "type": "integer"
          },
          "limit": {
            "type": "integer",
            "description": "The number of items to return in each page.\n",
            "example": 10,
            "minimum": 1,
            "maximum": 200
          },
          "first": {
            "$ref": "#/components/schemas/PaginationFirst"
          },
          "next": {
            "$ref": "#/components/schemas/PaginationNext"
          }
        },
        "required": [
          "limit",
          "first"
        ]
      },
      "PaginationTC": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationBase"
          },
          {
            "type": "object",
            "properties": {
              "total_count": {
                "description": "The total number of resources.\n",
                "type": "integer",
                "example": 1
              }
            }
          }
        ],
        "description": "Information for paging when querying resources.\n"
      },
      "ConsumptionsLimit": {
        "type": "object",
        "description": "The limits that may be set per request.\n",
        "properties": {
          "call_time": {
            "type": "string",
            "description": "The hard limit on the call time for a request, if set.\n",
            "example": "3S"
          },
          "max_input_tokens": {
            "type": "integer",
            "description": "The hard limit on the number of input tokens for a request, if set.\nA value of zero will disable this feature.\n",
            "example": 200
          },
          "max_output_tokens": {
            "type": "integer",
            "description": "The hard limit on the number of output tokens for a request, if set.\nA value of zero will disable this feature.\n",
            "example": 1000
          }
        }
      },
      "FoundationModelLimits": {
        "type": "object",
        "description": "Limits per plan that may be set per request.\n",
        "properties": {
          "lite": {
            "$ref": "#/components/schemas/ConsumptionsLimit"
          }
        }
      },
      "TaskRating": {
        "type": "object",
        "description": "The ratings for this task for this model.\n",
        "properties": {
          "cost": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "description": "A metric that indicates the cost expected to be incurred by the model's support of an inference task,\nin terms of resource consumption and processing time,\non a scale of 1 to 5, where 5 is the least cost and 1 is the most cost.\nA missing value means that the cost is not known.\n",
            "example": 2
          },
          "quality": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "description": "A metric that indicates the quality of the model's support of an inference task,\non a scale of 1 to 5, where 5 is the best support and 1 is poor support.\nA missing value means that the quality is not known.\n",
            "example": 3
          }
        }
      },
      "TaskDescription": {
        "type": "object",
        "description": "The attributes of the task for this model.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The `id` of the task.\n",
            "example": "summarization"
          },
          "ratings": {
            "$ref": "#/components/schemas/TaskRating"
          },
          "tags": {
            "type": "array",
            "description": "The tags for a given task.\n",
            "items": {
              "type": "string",
              "description": "The tag.\n"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "FoundationModelTier": {
        "type": "string",
        "description": "The tier of the model, depending on the `tier` the billing will be different, refer to the plan for the details. Note that input tokens and output tokens may be charged differently.\n",
        "enum": [
          "class_1",
          "class_2",
          "class_3",
          "class_c1"
        ]
      },
      "ModelLimits": {
        "type": "object",
        "description": "The limits that are applied for the model, for all the plans.\n",
        "properties": {
          "max_sequence_length": {
            "type": "integer",
            "description": "This is the maximum allowed value for the number of tokens in the input\nprompt plus the number of tokens in the output generated by the model.\n",
            "example": 4096
          },
          "training_data_max_records": {
            "type": "integer",
            "description": "This is the maximum number of records that can be accepted when training this model.\n",
            "example": 1024
          }
        }
      },
      "LifeCycleState": {
        "type": "object",
        "description": "The lifecycle details.\n",
        "properties": {
          "id": {
            "type": "string",
            "enum": [
              "available",
              "deprecated",
              "constricted",
              "withdrawn"
            ],
            "description": "The possible lifecycle stages, in order, are described below:\n\n- `available`: this means that the model is available for use.\n- `deprecated`: this means that the model is still available but the model will be removed soon, so an alternative model should be used.\n- `constricted`: this means that the model is still available for inferencing but cannot be used for training or in a deployment. The model will be removed soon so an alternative model should be used.\n- `withdrawn`: this means that the model is no longer available, check the `alternative_model_ids` to see what it can be replaced by.\n",
            "example": "available"
          },
          "label": {
            "type": "string",
            "description": "An optional label that may be used in the UI.\n"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "The date (ISO 8601 format YYYY-MM-DD) when this lifecycle stage starts.\n",
            "example": "2023-07-23",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "minLength": 10,
            "maxLength": 10
          },
          "alternative_model_ids": {
            "type": "array",
            "description": "Alternative models, or model versions, that can be used instead of this model.\n",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "A link to the documentation specifying details on the lifecycle plan for this model.\n"
          }
        },
        "required": [
          "id"
        ]
      },
      "TrainingInitMethod": {
        "type": "object",
        "description": "Initialization methods for a training.\n",
        "properties": {
          "supported": {
            "type": "array",
            "description": "The supported initialization methods.\n",
            "items": {
              "type": "string",
              "description": "A supported initialization method.\n"
            },
            "example": [
              "random",
              "text"
            ]
          },
          "default": {
            "type": "string",
            "description": "The default value, which will be one of the values from the `supported` field.\n",
            "example": "random"
          }
        }
      },
      "TrainingInitText": {
        "type": "object",
        "description": "Initialization text to be used if init_method is set to `text`, otherwise this will be ignored.\n",
        "properties": {
          "default": {
            "type": "string",
            "description": "Initialization text.\n",
            "example": "text"
          }
        }
      },
      "TrainingNumVirtualTokens": {
        "type": "object",
        "description": "Number of virtual tokens to be used for training.\nIn prompt tuning we are essentially learning the embedded representations for soft prompts,\nwhich are known as virtual tokens, via back propagation for a specific task(s) while keeping\nthe rest of the model fixed. `num_virtual_tokens` is the number of dimensions for these virtual tokens.\n",
        "properties": {
          "supported": {
            "type": "array",
            "description": "The possible values for the number of virtual tokens.\n",
            "items": {
              "type": "integer"
            },
            "example": [
              20,
              50,
              100
            ]
          },
          "default": {
            "type": "integer",
            "description": "The default number of virtual tokens.\n",
            "example": 100
          }
        }
      },
      "TrainingNumEpochs": {
        "type": "object",
        "description": "The number of epochs is the number of complete passes through the training dataset.\nThe quality depends on the number of epochs.\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 20
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 50
          }
        }
      },
      "TrainingVerbalizer": {
        "type": "object",
        "description": "Verbalizer template to be used for formatting data at train and inference time.\nThis template may use brackets to indicate where fields from the data model\nTrainGenerationRecord must be rendered.\n",
        "properties": {
          "default": {
            "type": "string",
            "description": "The default verbalizer.\n",
            "example": "Input: {{input}} Output:"
          }
        }
      },
      "TrainingBatchSize": {
        "type": "object",
        "description": "The batch size is a number of samples processed before the model is updated.\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 16
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 16
          }
        }
      },
      "TrainingMaxInputTokens": {
        "type": "object",
        "description": "Maximum length of input tokens being considered.\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 256
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 1024
          }
        }
      },
      "TrainingMaxOutputTokens": {
        "type": "object",
        "description": "Maximum length of output tokens being predicted.\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 128
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 256
          }
        }
      },
      "TrainingTorchDtype": {
        "type": "object",
        "description": "Datatype to use for training of the underlying text generation model.\nIf no value is provided, we pull from torch_dtype in config.\nIf an in memory resource is provided which does not match the specified data type,\nthe model underpinning the resource will be converted in place to the correct torch dtype.\n",
        "properties": {
          "default": {
            "type": "string",
            "description": "The datatype.\n",
            "example": "bfloat16"
          }
        }
      },
      "TrainingAccumulatedSteps": {
        "type": "object",
        "description": "Number of steps to be used for gradient accumulation.\nGradient accumulation refers to a method of collecting gradient for configured number of steps\ninstead of updating the model variables at every step and then applying the update to model variables.\nThis can be used as a tool to overcome smaller batch size limitation.\nOften also referred in conjunction with \"effective batch size\".\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 128
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 128
          }
        }
      },
      "TrainingLearningRate": {
        "type": "object",
        "description": "Learning rate to be used for training.\n",
        "properties": {
          "default": {
            "type": "number",
            "description": "The default value.\n",
            "example": 0.3
          },
          "min": {
            "type": "number",
            "description": "The minimum value.\n",
            "example": 0.01
          },
          "max": {
            "type": "number",
            "description": "The maximum value.\n",
            "example": 0.5
          }
        }
      },
      "TrainingParameters": {
        "type": "object",
        "description": "Training parameters for a given model.\n",
        "properties": {
          "init_method": {
            "$ref": "#/components/schemas/TrainingInitMethod"
          },
          "init_text": {
            "$ref": "#/components/schemas/TrainingInitText"
          },
          "num_virtual_tokens": {
            "$ref": "#/components/schemas/TrainingNumVirtualTokens"
          },
          "num_epochs": {
            "$ref": "#/components/schemas/TrainingNumEpochs"
          },
          "verbalizer": {
            "$ref": "#/components/schemas/TrainingVerbalizer"
          },
          "batch_size": {
            "$ref": "#/components/schemas/TrainingBatchSize"
          },
          "max_input_tokens": {
            "$ref": "#/components/schemas/TrainingMaxInputTokens"
          },
          "max_output_tokens": {
            "$ref": "#/components/schemas/TrainingMaxOutputTokens"
          },
          "torch_dtype": {
            "$ref": "#/components/schemas/TrainingTorchDtype"
          },
          "accumulate_steps": {
            "$ref": "#/components/schemas/TrainingAccumulatedSteps"
          },
          "learning_rate": {
            "$ref": "#/components/schemas/TrainingLearningRate"
          }
        }
      },
      "FoundationModelVersion": {
        "type": "object",
        "description": "A minor or patch version for the model.\n",
        "properties": {
          "version": {
            "type": "string",
            "pattern": "^\\d+.\\d+.\\d+$",
            "minLength": 5,
            "maxLength": 20,
            "description": "The version of the model. This must follow semantic versioning semantics.\n",
            "example": "1.1.0"
          },
          "available_date": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "minLength": 10,
            "maxLength": 10,
            "description": "The date (ISO 8601 format YYYY-MM-DD) when this version first became available.\n",
            "example": "2023-08-23"
          }
        }
      },
      "FoundationModel": {
        "type": "object",
        "description": "A supported foundation model.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The id of the foundation model.\n",
            "example": "google/flan-ul2"
          },
          "label": {
            "type": "string",
            "description": "A short label that will be displayed in the UI.\n",
            "example": "flan-ul2 (20B)"
          },
          "provider": {
            "type": "string",
            "description": "The provider of the model.\n",
            "example": "Hugging Face"
          },
          "tuned_by": {
            "type": "string",
            "description": "The organization or person that tuned this model.\n"
          },
          "short_description": {
            "type": "string",
            "description": "A short description of the model suitable for a title.\n",
            "example": "An encoder decoder model based on the T5 architecture and instruction-tuned using the Fine-tuned LAnguage Net."
          },
          "long_description": {
            "type": "string",
            "description": "A longer description of the model, that may be used if no `description_url` is provided.\n",
            "example": "flan-ul2 (20B) is an encoder decoder model based on the T5 architecture and instruction-tuned using the Fine-tuned LAnguage Net (FLAN)."
          },
          "limits": {
            "$ref": "#/components/schemas/FoundationModelLimits"
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The `id` of the tasks.\n"
            },
            "description": "Deprecated: please use `tasks` instead.\n",
            "deprecated": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDescription"
            },
            "minItems": 1,
            "description": "The tasks that are supported by this model.\n",
            "example": [
              {
                "id": "summarization",
                "ratings": {
                  "cost": 2,
                  "quality": 3
                }
              },
              {
                "id": "classification",
                "ratings": {
                  "cost": 4,
                  "quality": 2
                }
              }
            ]
          },
          "input_tier": {
            "$ref": "#/components/schemas/FoundationModelTier"
          },
          "output_tier": {
            "$ref": "#/components/schemas/FoundationModelTier"
          },
          "source": {
            "type": "string",
            "description": "Specifies the provider of this model.\n",
            "example": "Hugging Face"
          },
          "min_shot_size": {
            "type": "integer",
            "description": "The minimum number of examples required for the model.\n",
            "example": 10,
            "minimum": 0
          },
          "number_params": {
            "type": "string",
            "description": "The number of parameters used for the model,\nit will accept `m` for million, `b` for billion and `t` for trillion.\n",
            "example": "20b"
          },
          "model_limits": {
            "$ref": "#/components/schemas/ModelLimits"
          },
          "lifecycle": {
            "type": "array",
            "description": "The information related to the lifecycle of this model.\n",
            "items": {
              "$ref": "#/components/schemas/LifeCycleState"
            },
            "minItems": 0
          },
          "training_parameters": {
            "$ref": "#/components/schemas/TrainingParameters"
          },
          "versions": {
            "type": "array",
            "description": "The information related to the minor versions of this model.\n",
            "items": {
              "$ref": "#/components/schemas/FoundationModelVersion"
            },
            "minItems": 0
          }
        },
        "required": [
          "model_id",
          "label",
          "provider",
          "short_description",
          "input_tier",
          "output_tier",
          "source",
          "number_params"
        ]
      },
      "FoundationModelsArray": {
        "description": "The supported foundation models.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FoundationModel"
        }
      },
      "FoundationModels": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationTC"
          },
          {
            "type": "object",
            "description": "A list of the foundation models that are supported in the service.\n",
            "required": [
              "limit",
              "first"
            ],
            "properties": {
              "resources": {
                "$ref": "#/components/schemas/FoundationModelsArray"
              }
            }
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "FoundationModelTask": {
        "type": "object",
        "description": "A task that is covered by some of the foundation models that are supported in the service.\n",
        "properties": {
          "task_id": {
            "type": "string",
            "description": "The id of the task.\n",
            "example": "summarization"
          },
          "label": {
            "type": "string",
            "description": "The label of the task.\n",
            "example": "Summarization"
          },
          "description": {
            "type": "string",
            "description": "The description of the task.\n",
            "example": "Models that are able to summarize documents based on some criteria."
          },
          "rank": {
            "type": "integer",
            "description": "The rank of the task that is mainly for the UI.\n",
            "example": 1
          }
        },
        "required": [
          "task_id",
          "label",
          "rank"
        ]
      },
      "FoundationModelTasksArray": {
        "type": "array",
        "description": "The supported foundation model tasks.\n",
        "items": {
          "$ref": "#/components/schemas/FoundationModelTask"
        }
      },
      "FoundationModelTasks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationTC"
          },
          {
            "type": "object",
            "description": "A list of the tasks that are covered by the foundation models that are supported in the service.\n",
            "required": [
              "limit",
              "first"
            ],
            "properties": {
              "resources": {
                "$ref": "#/components/schemas/FoundationModelTasksArray"
              }
            }
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "Pagination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationBase"
          },
          {
            "type": "object",
            "properties": {
              "total_count": {
                "description": "The total number of resources.\nComputed explicitly only when 'total_count=true' query parameter is present.\nThis is in order to avoid performance penalties.\n",
                "type": "integer",
                "example": 1
              }
            }
          }
        ],
        "description": "Information for paging when querying resources.\n"
      },
      "ResourceMetaSimple": {
        "type": "object",
        "description": "Common metadata for a simple resource.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the resource.\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the resource was created.\n"
          }
        },
        "required": [
          "id",
          "created_at"
        ]
      },
      "Tags": {
        "type": "array",
        "description": "A list of tags for this resource.\n",
        "items": {
          "type": "string"
        },
        "example": [
          "t1",
          "t2"
        ]
      },
      "ResourceCommitInfo": {
        "type": "object",
        "description": "Information related to the revision.\n",
        "properties": {
          "committed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the revision was committed.\n"
          },
          "commit_message": {
            "type": "string",
            "description": "The message that was provided when the revision was created.\n"
          }
        },
        "required": [
          "committed_at"
        ]
      },
      "ResourceMetaBase": {
        "type": "object",
        "description": "Common metadata for a resource.\n",
        "example": {
          "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
          "rev": "2",
          "owner": "guy",
          "created_at": "2020-05-02T16:27:51Z",
          "modified_at": "2020-05-02T16:30:51Z",
          "parent_id": "dfe1cf1-252f-424b-b52d-5cdd9814600c",
          "name": "my-name",
          "description": "My resource",
          "tags": [
            "t1",
            "t2"
          ],
          "commit_info": {
            "committed_at": "2020-05-02T16:27:51Z",
            "commit_message": "Updated to TF 2.0"
          },
          "space_id": "3fc54cf1-252f-424b-b52d-5cdd9814987f"
        },
        "properties": {
          "rev": {
            "type": "string",
            "description": "The revision of the resource.\n"
          },
          "owner": {
            "description": "The user id which created this resource.\n",
            "type": "string"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the resource was last modified.\n"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the parent resource where applicable.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource.\n"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.\n"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "commit_info": {
            "$ref": "#/components/schemas/ResourceCommitInfo"
          }
        }
      },
      "ResourceMeta": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceMetaSimple"
          },
          {
            "$ref": "#/components/schemas/ResourceMetaBase"
          },
          {
            "type": "object",
            "description": "Common metadata for a resource where `project_id` or `space_id` must be present.\n",
            "properties": {
              "space_id": {
                "$ref": "#/components/schemas/SpaceId"
              },
              "project_id": {
                "$ref": "#/components/schemas/ProjectId"
              }
            }
          }
        ]
      },
      "Custom": {
        "description": "User defined properties specified as key-value pairs.\n",
        "type": "object",
        "additionalProperties": true,
        "example": {
          "name": "model",
          "size": 2
        }
      },
      "SimpleRel": {
        "type": "object",
        "description": "A reference to a resource.\n",
        "properties": {
          "id": {
            "description": "The id of the referenced resource.\n",
            "type": "string",
            "example": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
          }
        },
        "required": [
          "id"
        ]
      },
      "OnlineDeploymentParameters": {
        "type": "object",
        "description": "A set of key-value pairs that are used to configure the deployment.\n",
        "properties": {
          "serving_name": {
            "type": "string",
            "pattern": "^[a-z,0-9,_]+$",
            "minLength": 3,
            "maxLength": 36,
            "description": "The `serving_name` can be used in the inference URL in place of the `deployment_id`.\n",
            "example": "churn"
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "OnlineDeployment": {
        "type": "object",
        "description": "Indicates that this is an online deployment. An object has to be specified but can be empty.\nThe `serving_name` can be provided in the `online.parameters`.\n",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/OnlineDeploymentParameters"
          }
        }
      },
      "HardwareSpec": {
        "description": "A hardware specification.\n",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the hardware specification.\n",
            "type": "string",
            "example": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
          },
          "rev": {
            "description": "The revision of the hardware specification.\n",
            "type": "string",
            "example": "2"
          },
          "name": {
            "description": "The name of the hardware specification.\n",
            "type": "string"
          },
          "num_nodes": {
            "type": "integer",
            "description": "The number of nodes applied to a computation.\n",
            "example": 2
          }
        }
      },
      "HardwareRequest": {
        "type": "object",
        "description": "The requested hardware for deployment.\n",
        "properties": {
          "size": {
            "description": "The size of GPU requested for the deployment.\n",
            "type": "string",
            "enum": [
              "gpu_s",
              "gpu_m"
            ]
          },
          "num_nodes": {
            "description": "The number of nodes for the GPU requested for deployment.\n",
            "type": "number"
          }
        }
      },
      "DeploymentEntityCommon": {
        "description": "The common fields between a request and the response.\n",
        "type": "object",
        "properties": {
          "custom": {
            "$ref": "#/components/schemas/Custom"
          },
          "prompt_template": {
            "$ref": "#/components/schemas/SimpleRel"
          },
          "online": {
            "$ref": "#/components/schemas/OnlineDeployment"
          },
          "hardware_spec": {
            "$ref": "#/components/schemas/HardwareSpec"
          },
          "hardware_request": {
            "$ref": "#/components/schemas/HardwareRequest"
          }
        },
        "required": [
          "online"
        ]
      },
      "ModelRel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleRel"
          },
          {
            "type": "object",
            "properties": {
              "rev": {
                "type": "string",
                "description": "The revision of the referenced resource.\n",
                "example": "2"
              },
              "resource_key": {
                "type": "string",
                "description": "The resource key for this asset if it exists.\n",
                "example": "f52fe20c-a1fe-4e54-9b78-6bf2ff61b455"
              }
            }
          }
        ]
      },
      "ModelAssetRef": {
        "type": "object",
        "description": "The field that identifies the asset.\n",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/ModelRel"
          }
        }
      },
      "DeploymentResourceEntity": {
        "type": "object",
        "description": "The properties specific to `watsonx.ai` deployments.\n",
        "properties": {
          "base_model_id": {
            "type": "string",
            "description": "The base model that is required for this deployment if this is for a prompt template or a prompt tune for an IBM foundation model.\n",
            "example": "google/flan-t5-xl"
          }
        }
      },
      "Message": {
        "type": "object",
        "description": "Optional messages related to the resource.\n",
        "properties": {
          "level": {
            "description": "The level of the message, normally one of `debug`, `info` or `warning`.\n",
            "type": "string",
            "example": "info"
          },
          "text": {
            "description": "The message.\n",
            "type": "string",
            "example": "The deployment is successful"
          }
        }
      },
      "Inference": {
        "type": "object",
        "description": "The details of an inference API.\n",
        "properties": {
          "url": {
            "type": "string",
            "description": "The inference URL.\n"
          },
          "sse": {
            "type": "boolean",
            "description": "This is `true` if the inference API supports SSE streaming.\n",
            "default": false,
            "example": true
          },
          "uses_serving_name": {
            "type": "boolean",
            "description": "This is `true` if the inference API uses the `serving_name` that was defined in this deployment.\n",
            "default": false,
            "example": true
          }
        },
        "required": [
          "url"
        ]
      },
      "DeploymentStatus": {
        "type": "object",
        "description": "Specifies the current status, additional information about the deployment\nand any failure messages in case of deployment failures.\n",
        "properties": {
          "state": {
            "description": "Specifies the current state of the deployment.\n",
            "type": "string",
            "enum": [
              "initializing",
              "updating",
              "ready",
              "failed"
            ],
            "example": "ready"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "failure": {
            "$ref": "#/components/schemas/ApiErrorResponse"
          },
          "inference": {
            "description": "The URLs that can be used to submit inference API requests. These URLs will contain the\n`deployment_id` and the `serving_name`, if the `serving_name` was set.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inference"
            },
            "example": [
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/classification/text/generation",
                "uses_serving_name": true
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                "sse": true
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/classification/text/generation_stream",
                "sse": true,
                "uses_serving_name": true
              }
            ]
          }
        }
      },
      "DeploymentEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DeploymentEntityCommon"
          },
          {
            "$ref": "#/components/schemas/ModelAssetRef"
          },
          {
            "$ref": "#/components/schemas/DeploymentResourceEntity"
          },
          {
            "type": "object",
            "description": "The definition of the deployment.\n",
            "properties": {
              "deployed_asset_type": {
                "description": "The type of the deployed model. The possible values are the following:\n1. `prompt_tune` - when a prompt tuned model is deployed.\n2. `foundation_model` - when a prompt template is used on a pre-deployed IBM provided model.\n",
                "type": "string",
                "enum": [
                  "prompt_tune",
                  "foundation_model"
                ]
              },
              "verbalizer": {
                "type": "string",
                "description": "The verbalizer that was used to train this model if the deployment\nhas `deployed_asset_type` of `prompt_tune`.\n"
              },
              "status": {
                "$ref": "#/components/schemas/DeploymentStatus"
              }
            }
          }
        ],
        "example": {
          "asset": {
            "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
          },
          "online": {
            "parameters": {
              "serving_name": "classification"
            }
          },
          "deployed_asset_type": "prompt_tune",
          "verbalizer": "Input: {{input}} Output:",
          "status": {
            "state": "ready",
            "message": {
              "level": "info",
              "text": "The deployment is successful"
            },
            "inference": [
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/classification/text/generation",
                "uses_serving_name": true
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                "sse": true
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/classification/text/generation_stream",
                "sse": true,
                "uses_serving_name": true
              }
            ]
          }
        }
      },
      "DeploymentResource": {
        "type": "object",
        "description": "A deployment resource.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ResourceMeta"
          },
          "entity": {
            "$ref": "#/components/schemas/DeploymentEntity"
          }
        },
        "example": {
          "metadata": {
            "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
            "created_at": "2023-05-02T16:27:51Z",
            "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
            "name": "text_classification",
            "description": "Classification prompt tuned model deployment",
            "tags": [
              "classification"
            ]
          },
          "entity": {
            "asset": {
              "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
            },
            "online": {
              "parameters": {
                "serving_name": "classification"
              }
            },
            "deployed_asset_type": "prompt_tune",
            "base_model_id": "google/flan-t5-xl",
            "status": {
              "state": "ready",
              "message": {
                "level": "info",
                "text": "The deployment is successful"
              },
              "inference": [
                {
                  "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
                },
                {
                  "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/classification/text/generation",
                  "uses_serving_name": true
                },
                {
                  "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                  "sse": true
                },
                {
                  "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/classification/text/generation_stream",
                  "sse": true,
                  "uses_serving_name": true
                }
              ]
            }
          }
        }
      },
      "Stats": {
        "type": "object",
        "description": "The stats about deployments for a space.\n",
        "properties": {
          "space_id": {
            "type": "string",
            "description": "An `id` associated with the space.\n",
            "example": "2fc54cf1-252f-424b-b52d-5cdd98149871"
          },
          "total_count": {
            "type": "number",
            "description": "The total number of deployments created in a space including `online` and `batch`.\n"
          },
          "online_count": {
            "type": "number",
            "description": "The number of online deployments created in a space.\n"
          },
          "batch_count": {
            "type": "number",
            "description": "The number of batch deployments created in a space.\n"
          }
        }
      },
      "DeploymentSystemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SystemDetails"
          },
          {
            "type": "object",
            "description": "Optional details provided by the service about statistics of the number of deployments created. The deployments that are counted will depend on the request parameters.\n",
            "properties": {
              "stats": {
                "type": "array",
                "description": "The stats about deployments.\n",
                "items": {
                  "$ref": "#/components/schemas/Stats"
                }
              }
            }
          }
        ]
      },
      "DeploymentSystem": {
        "type": "object",
        "description": "System details including warnings.\n",
        "properties": {
          "system": {
            "$ref": "#/components/schemas/DeploymentSystemDetails"
          }
        }
      },
      "DeploymentResourceCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "description": "The deployment resources.\n",
            "properties": {
              "resources": {
                "type": "array",
                "description": "A list of deployment resources.\n",
                "items": {
                  "$ref": "#/components/schemas/DeploymentResource"
                }
              },
              "system": {
                "$ref": "#/components/schemas/DeploymentSystem"
              }
            }
          }
        ]
      },
      "EntityRequestSpaceProjectBody": {
        "type": "object",
        "description": "The properties that are part of a request that supports spaces and projects.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the resource.\n",
            "example": "my-resource"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.\n",
            "example": "This is my first resource."
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "name"
        ]
      },
      "Rel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleRel"
          },
          {
            "type": "object",
            "properties": {
              "rev": {
                "description": "The revision of the referenced resource.\n",
                "type": "string",
                "example": "2"
              }
            }
          }
        ]
      },
      "AssetRef": {
        "type": "object",
        "description": "The field that identifies the asset.\n",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Rel"
          }
        }
      },
      "DeploymentResourcePrototype": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRequestSpaceProjectBody"
          },
          {
            "$ref": "#/components/schemas/DeploymentEntityCommon"
          },
          {
            "$ref": "#/components/schemas/AssetRef"
          },
          {
            "$ref": "#/components/schemas/DeploymentResourceEntity"
          }
        ],
        "description": "The deployment request entity (this description is not used).\n",
        "example": {
          "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
          "name": "text_classification",
          "description": "Classification prompt tuned model deployment",
          "asset": {
            "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
          },
          "online": {
            "parameters": {
              "serving_name": "classification"
            }
          },
          "tags": [
            "classification"
          ]
        }
      },
      "JsonPatchOperation": {
        "type": "object",
        "description": "This model represents an individual patch operation to be performed on an object, as defined by\n[RFC 6902](https://tools.ietf.org/html/rfc6902).\n",
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.\n",
            "enum": [
              "add",
              "remove",
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "The pointer that identifies the field that is the target of the operation.\n"
          },
          "value": {
            "type": "string",
            "description": "The value to be used within the operation.\n"
          }
        },
        "required": [
          "op",
          "path"
        ]
      },
      "JsonPatch": {
        "description": "See [JSON PATCH RFC 6902](https://tools.ietf.org/html/rfc6902).\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JsonPatchOperation"
        }
      },
      "CaiKitTextGenProperties": {
        "type": "object",
        "description": "Properties that control the model and response that are only supported in caikit.\n",
        "properties": {
          "typical_p": {
            "type": "number",
            "description": "Local typicality measures how similar the conditional probability of predicting a target\ntoken next is to the expected conditional probability of predicting a random token next,\ngiven the partial text already generated. If less than 1, the smallest set of the most\nlocally typical tokens with probabilities that add up to typical_p or higher are kept for generation.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "example": 0.5
          }
        }
      },
      "TextGenParameters2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextGenParameters"
          },
          {
            "$ref": "#/components/schemas/CaiKitTextGenProperties"
          }
        ],
        "example": {
          "temperature": 0.8,
          "top_p": 0.5,
          "top_k": 50,
          "random_seed": 111,
          "repetition_penalty": 2,
          "min_new_tokens": 30,
          "max_new_tokens": 50,
          "typical_p": 0.5
        }
      },
      "PromptVariables": {
        "type": "object",
        "description": "The prompt variables.\n",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "doc_type": "emails",
          "entity_name": "Golden Retail",
          "country_name": "London"
        }
      },
      "PromptTemplateVariables": {
        "type": "object",
        "description": "The template properties if this request refers to a prompt template.\n",
        "properties": {
          "prompt_variables": {
            "$ref": "#/components/schemas/PromptVariables"
          }
        }
      },
      "DeploymentTextGenProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextGenParameters2"
          },
          {
            "$ref": "#/components/schemas/PromptTemplateVariables"
          }
        ]
      },
      "DeploymentTextGen": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "description": "The prompt to generate completions.\nNote: The method tokenizes the input internally.\nIt is recommended not to leave any trailing spaces.\n\n\nThis field is ignored if there is a prompt template.\n"
          },
          "parameters": {
            "$ref": "#/components/schemas/DeploymentTextGenProperties"
          },
          "moderations": {
            "$ref": "#/components/schemas/Moderations"
          }
        }
      },
      "DeploymentTextGenRequest": {
        "description": "A prompt to be used to infer the next tokens.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/DeploymentTextGen"
          }
        ],
        "example": {
          "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
          "parameters": {
            "decoding_method": "sample",
            "temperature": 0.8,
            "max_new_tokens": 200
          }
        }
      },
      "BaseModel": {
        "type": "object",
        "description": "The model id of the base model for this job.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model id of the base model.\n",
            "example": "google/flan-t5-xl"
          }
        }
      },
      "PromptTuning": {
        "type": "object",
        "description": "Properties to control the prompt tuning.\n",
        "example": {
          "base_model": {
            "model_id": "google/flan-t5-xl"
          },
          "task_id": "summarization",
          "tuning_type": "prompt_tuning",
          "num_epochs": 30,
          "learning_rate": 0.4,
          "accumulate_steps": 3,
          "batch_size": 10,
          "max_input_tokens": 100,
          "max_output_tokens": 100
        },
        "required": [
          "task_id"
        ],
        "properties": {
          "base_model": {
            "$ref": "#/components/schemas/BaseModel"
          },
          "task_id": {
            "type": "string",
            "description": "The task that is targeted for this model.\n",
            "example": "summarization"
          },
          "tuning_type": {
            "type": "string",
            "description": "Type of Peft (Parameter-Efficient Fine-Tuning) config to build.\n",
            "example": "prompt_tuning",
            "default": "prompt_tuning",
            "enum": [
              "prompt_tuning"
            ]
          },
          "num_epochs": {
            "type": "integer",
            "description": "Number of epochs to tune the prompt vectors, this affects the quality of the trained model.\n",
            "default": 20,
            "example": 30,
            "minimum": 1,
            "maximum": 50
          },
          "learning_rate": {
            "type": "number",
            "description": "Learning rate to be used while tuning prompt vectors.\n",
            "minimum": 0.01,
            "maximum": 0.5,
            "default": 0.3,
            "example": 0.4
          },
          "accumulate_steps": {
            "type": "integer",
            "description": "Number of steps to be used for gradient accumulation.\nGradient accumulation refers to a method of collecting gradient for configured number of\nsteps instead of updating the model variables at every step and then applying the update\nto model variables. This can be used as a tool to overcome smaller batch size limitation.\nOften also referred in conjunction with \"effective batch size\".\n",
            "minimum": 1,
            "maximum": 128,
            "default": 16,
            "example": 32
          },
          "verbalizer": {
            "type": "string",
            "description": "Verbalizer template to be used for formatting data at train and inference time.\nThis template may use brackets to indicate where fields from the data model\nmust be rendered.\n",
            "default": "Input: {{input}} Output:",
            "example": "rte { 0 : entailment, 1 : not entailment } {{input}}"
          },
          "batch_size": {
            "type": "integer",
            "description": "The batch size is a number of samples processed before the model is updated.\n",
            "minimum": 1,
            "maximum": 16,
            "default": 16,
            "example": 10
          },
          "max_input_tokens": {
            "type": "integer",
            "description": "Maximum length of input tokens being considered.\n",
            "minimum": 1,
            "maximum": 256,
            "default": 256,
            "example": 100
          },
          "max_output_tokens": {
            "type": "integer",
            "description": "Maximum length of output tokens being predicted.\n",
            "minimum": 1,
            "maximum": 128,
            "default": 128,
            "example": 100
          },
          "init_method": {
            "type": "string",
            "description": "The `text` method requires `init_text` to be set.\n",
            "enum": [
              "random",
              "text"
            ],
            "example": "text",
            "default": "random"
          },
          "init_text": {
            "type": "string",
            "description": "Initialization text to be used if `init_method` is\nset to `text` otherwise this will be ignored.\n"
          }
        }
      },
      "DataConnection": {
        "type": "object",
        "description": "Contains a set of fields specific to each connection.\nSee here for [details about specifying connections](#datareferences).\n",
        "example": {
          "id": "2d07a6b4-8fa9-43ab-91c8-befcd9dab8d2"
        }
      },
      "DataLocation": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Contains a set of fields that describe the location of the data with respect to the `connection`.\n",
        "example": {
          "bucket": "wml-v4-fvt-remote-tests",
          "file_name": "heart_testpy379.csv"
        }
      },
      "DataSchema": {
        "title": "data_schema",
        "type": "object",
        "description": "The schema of the expected data, see\n[datarecord-metadata-v2-schema](https://raw.githubusercontent.com/elyra-ai/pipeline-schemas/master/common-pipeline/datarecord-metadata/datarecord-metadata-v2-schema.json)\nfor the schema definition.\n",
        "properties": {
          "id": {
            "description": "An id to identify a schema.\n",
            "type": "string",
            "example": "t1"
          },
          "name": {
            "description": "A name for the schema.\n",
            "type": "string",
            "example": "Tasks"
          },
          "fields": {
            "type": "array",
            "description": "The fields that describe the data schema.\n",
            "items": {
              "type": "object",
              "description": "A description of a field in the data schema.\n"
            },
            "example": [
              {
                "name": "duration",
                "type": "number"
              }
            ]
          },
          "type": {
            "description": "The type of the schema, can be ignored or set to `struct` or `DataFrame`.\n",
            "type": "string",
            "example": "struct"
          }
        },
        "required": [
          "id",
          "fields"
        ]
      },
      "DataConnectionReference": {
        "title": "data_connection",
        "type": "object",
        "description": "A reference to data with an optional data schema.\nIf necessary, it is possible to provide a data connection that contains\njust the data schema.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "Optional item identification inside a collection.\n",
            "example": "8d3682dd-2858-43c9-bfd7-12a79abcfb0c"
          },
          "type": {
            "description": "The data source type like `connection_asset` or `data_asset`.\nIf the data connection contains just a schema then this field is not required.\n",
            "type": "string",
            "enum": [
              "connection_asset",
              "data_asset",
              "container",
              "url"
            ],
            "example": "connection_asset"
          },
          "connection": {
            "$ref": "#/components/schemas/DataConnection"
          },
          "location": {
            "$ref": "#/components/schemas/DataLocation"
          },
          "schema": {
            "$ref": "#/components/schemas/DataSchema"
          }
        },
        "required": [
          "type"
        ]
      },
      "TrainingResourceEntityCommon": {
        "type": "object",
        "properties": {
          "prompt_tuning": {
            "$ref": "#/components/schemas/PromptTuning"
          },
          "training_data_references": {
            "type": "array",
            "description": "Training datasets.\n",
            "items": {
              "$ref": "#/components/schemas/DataConnectionReference"
            },
            "example": [
              {
                "id": "tune1_data.json",
                "location": {
                  "path": "tune1_data.json"
                },
                "type": "container"
              }
            ]
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          },
          "auto_update_model": {
            "type": "boolean",
            "description": "If set to `true` then the result of the training, if successful, will be uploaded\nto the repository as a model.\n",
            "default": false,
            "example": true
          }
        }
      },
      "ObjectLocation": {
        "type": "object",
        "description": "A reference to data.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "Item identification inside a collection.\n"
          },
          "type": {
            "description": "The data source type like `connection_asset` or `data_asset`.\n",
            "type": "string",
            "enum": [
              "connection_asset",
              "data_asset",
              "container",
              "url"
            ],
            "example": "connection_asset"
          },
          "connection": {
            "$ref": "#/components/schemas/DataConnection"
          },
          "location": {
            "$ref": "#/components/schemas/DataLocation"
          }
        },
        "required": [
          "type",
          "location"
        ]
      },
      "ResultsReferenceOutput": {
        "type": "object",
        "properties": {
          "results_reference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLocation"
              }
            ],
            "description": "The training results. Normally this is specified as `type=container` which means that it is stored in the space or project. Note that the training will add some fields that point to the training status, the model request and the assets.\n\nThe `model_request_path` is the request body that should be used when creating the trained model in the API, if this model is to be deployed. If `auto_update_model` was set to `true` then this file is not needed.\n",
            "example": {
              "location": {
                "path": "results",
                "training": "results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
                "training_status": "results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
                "assets_path": "results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
                "model_request_path": "results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
              },
              "type": "container"
            }
          }
        },
        "required": [
          "results_reference"
        ]
      },
      "TrainingMLMetrics": {
        "type": "object",
        "additionalProperties": {
          "type": "number"
        },
        "description": "The metrics.\n",
        "example": {
          "loss": 4.49988
        }
      },
      "PromptTuningMetricsContext": {
        "type": "object",
        "description": "The context for prompt tuning metrics.\n",
        "properties": {
          "metrics_location": {
            "type": "string",
            "description": "The location where the prompt tuning metrics are stored.\n"
          }
        }
      },
      "MetricsContext": {
        "description": "Provides extra information for this training stage in the context of auto-ml.\n",
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string",
            "description": "The deployment that created the metrics.\n"
          },
          "prompt_tuning": {
            "$ref": "#/components/schemas/PromptTuningMetricsContext"
          }
        }
      },
      "TrainingMetric": {
        "type": "object",
        "description": "A metric.\n",
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2023-09-22T02:52:03.324Z",
            "format": "date-time",
            "description": "A timestamp for the metrics.\n"
          },
          "iteration": {
            "type": "integer",
            "example": 0,
            "description": "The iteration number.\n"
          },
          "ml_metrics": {
            "$ref": "#/components/schemas/TrainingMLMetrics"
          },
          "context": {
            "$ref": "#/components/schemas/MetricsContext"
          }
        }
      },
      "TrainingMetrics": {
        "type": "array",
        "description": "Metrics that can be returned by an operation.\n",
        "items": {
          "$ref": "#/components/schemas/TrainingMetric"
        },
        "example": [
          {
            "iteration": 0,
            "ml_metrics": {
              "loss": 4.49988
            },
            "timestamp": "2023-09-22T02:52:03.324Z"
          },
          {
            "iteration": 1,
            "ml_metrics": {
              "loss": 3.86884
            },
            "timestamp": "2023-09-22T02:52:03.689Z"
          },
          {
            "iteration": 2,
            "ml_metrics": {
              "loss": 4.05115
            },
            "timestamp": "2023-09-22T02:52:04.053Z"
          }
        ]
      },
      "TrainingStatus": {
        "type": "object",
        "description": "Status of the training job.\n",
        "properties": {
          "running_at": {
            "type": "string",
            "description": "Date and Time in which current training state has started.",
            "example": "2017-01-30T10:11:12Z",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "description": "Date and Time in which training had completed.",
            "example": "2017-01-30T10:11:12Z",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "description": "Current state of training.",
            "enum": [
              "queued",
              "pending",
              "running",
              "storing",
              "completed",
              "failed",
              "canceled"
            ]
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "metrics": {
            "$ref": "#/components/schemas/TrainingMetrics"
          },
          "failure": {
            "$ref": "#/components/schemas/ApiErrorResponse"
          }
        },
        "required": [
          "state"
        ],
        "example": {
          "state": "completed",
          "running_at": "2023-08-04T13:22:48.000Z",
          "completed_at": "2023-08-04T13:22:55.289Z",
          "message": {
            "level": "info",
            "text": "Training job 360c40f7-ac0c-43ca-a95f-1a5421f93b82 completed"
          }
        }
      },
      "TrainingStatusOutput": {
        "type": "object",
        "description": "Status of the training job.\n",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TrainingStatus"
          }
        },
        "required": [
          "status"
        ]
      },
      "TrainingResourceEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrainingResourceEntityCommon"
          },
          {
            "$ref": "#/components/schemas/ResultsReferenceOutput"
          },
          {
            "$ref": "#/components/schemas/TrainingStatusOutput"
          }
        ],
        "example": {
          "prompt_tuning": {
            "base_model": {
              "model_id": "google/flan-t5-xl"
            }
          },
          "training_data_references": [
            {
              "id": "tune1_data.json",
              "location": {
                "path": "tune1_data.json"
              },
              "type": "container"
            }
          ],
          "auto_update_model": true,
          "results_reference": {
            "location": {
              "path": "tune1/results",
              "training": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
              "training_status": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
              "assets_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
              "model_request_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
            },
            "type": "container"
          },
          "status": {
            "state": "completed",
            "running_at": "2023-08-04T13:22:48.000Z",
            "completed_at": "2023-08-04T13:22:55.289Z",
            "message": {
              "level": "info",
              "text": "Training job 360c40f7-ac0c-43ca-a95f-1a5421f93b82 completed"
            }
          }
        }
      },
      "TrainingResource": {
        "type": "object",
        "description": "Training resource.\n",
        "properties": {
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceMeta"
              }
            ],
            "example": {
              "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
              "name": "my-prompt-training",
              "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
              "owner": "guy",
              "created_at": "2023-08-04T13:22:55.289Z"
            }
          },
          "entity": {
            "$ref": "#/components/schemas/TrainingResourceEntity"
          }
        }
      },
      "TrainingResourceCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "properties": {
              "resources": {
                "type": "array",
                "description": "The training resources.\n",
                "items": {
                  "$ref": "#/components/schemas/TrainingResource"
                }
              },
              "system": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SystemDetails"
                  }
                ],
                "example": {
                  "warnings": [
                    {
                      "message": "This model is a Non-IBM Product governed by a third-party license that may impose use restrictions and other obligations.",
                      "id": "DisclaimerWarning"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "TrainingResourceDetails": {
        "type": "object",
        "description": "The training details required when creating the job.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the training.\n",
            "example": "my-prompt-training"
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "description": {
            "type": "string",
            "description": "A description of the training.\n",
            "example": "My prompt training."
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "name"
        ]
      },
      "ResultsReferenceInput": {
        "type": "object",
        "properties": {
          "results_reference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLocation"
              }
            ],
            "description": "The training results. Normally this is specified as `type=container` which\nmeans that it is stored in the space or project.\n",
            "example": {
              "location": {
                "path": "results"
              },
              "type": "container"
            }
          }
        },
        "required": [
          "results_reference"
        ]
      },
      "TrainingResourcePrototype": {
        "description": "The `training_data_references` contain the training datasets and the\n`results_reference` the connection where results will be stored.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TrainingResourceDetails"
          },
          {
            "$ref": "#/components/schemas/TrainingResourceEntityCommon"
          },
          {
            "$ref": "#/components/schemas/ResultsReferenceInput"
          }
        ],
        "example": {
          "name": "my-prompt-tune-training",
          "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
          "prompt_tuning": {
            "base_model": {
              "model_id": "google/flan-t5-xl"
            },
            "tuning_type": "prompt_tuning",
            "num_epochs": 30,
            "learning_rate": 0.4,
            "accumulate_steps": 3,
            "batch_size": 10,
            "max_input_tokens": 100,
            "max_output_tokens": 100
          },
          "training_data_references": [
            {
              "id": "tune1_data.json",
              "location": {
                "path": "tune1_data.json"
              },
              "type": "container"
            }
          ],
          "auto_update_model": true,
          "results_reference": {
            "location": {
              "path": "tune1/results"
            },
            "type": "container"
          }
        }
      },
      "EmbeddingModelId": {
        "type": "string",
        "description": "The `id` of the model to be used for this request.\nPlease refer to the [list of models](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models-embed.html?context=wx&audience=wdp).\n"
      },
      "TextInput": {
        "type": "string",
        "description": "The text input to the model.\n"
      },
      "ParameterTruncateInputTokensFromEnd": {
        "type": "integer",
        "description": "Represents the maximum number of input tokens accepted.\nThis can be used to avoid requests failing due to input being longer than configured limits. If the text is truncated, then it truncates the end of the input (on the right), so the start of the input will remain the same.\nIf this value exceeds the `maximum sequence length` (refer to the documentation to find this value for the model) then the call will fail if the total number of tokens exceeds the `maximum sequence length`.\n",
        "minimum": 1
      },
      "EmbeddingReturnOptions": {
        "type": "object",
        "description": "The return options for text embeddings.\n",
        "properties": {
          "input_text": {
            "type": "boolean",
            "description": "Include the `input` text in each of the `results` documents.\n"
          }
        }
      },
      "EmbeddingParameters": {
        "type": "object",
        "description": "Parameters for text embedding requests.\n",
        "properties": {
          "truncate_input_tokens": {
            "$ref": "#/components/schemas/ParameterTruncateInputTokensFromEnd"
          },
          "return_options": {
            "$ref": "#/components/schemas/EmbeddingReturnOptions"
          }
        }
      },
      "EmbeddingsRequest": {
        "type": "object",
        "description": "The text input for a given model to be used to generate the embeddings.\n",
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "inputs": {
            "type": "array",
            "description": "The input text.\n",
            "items": {
              "$ref": "#/components/schemas/TextInput"
            },
            "maxItems": 1000,
            "nullable": false
          },
          "parameters": {
            "$ref": "#/components/schemas/EmbeddingParameters"
          }
        },
        "required": [
          "model_id",
          "inputs"
        ]
      },
      "Embedding": {
        "type": "object",
        "description": "The embedding values for a text string. The `input` field is only set if the corresponding `return_option` is set.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/TextInput"
          },
          "embedding": {
            "type": "array",
            "description": "The embedding values.\n",
            "items": {
              "type": "number",
              "description": "An embedding value.\n"
            },
            "minItems": 0
          }
        },
        "required": [
          "embedding"
        ]
      },
      "InputTokenCount": {
        "type": "integer",
        "description": "The number of input tokens that were consumed.\n"
      },
      "EmbeddingsResponseFields": {
        "type": "object",
        "description": "The embeddings per input.\n",
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "results": {
            "type": "array",
            "description": "The embedding values for a given text.\n",
            "items": {
              "$ref": "#/components/schemas/Embedding"
            },
            "minItems": 0
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "input_token_count": {
            "$ref": "#/components/schemas/InputTokenCount"
          }
        },
        "required": [
          "model_id",
          "results",
          "created_at",
          "input_token_count"
        ]
      },
      "EmbeddingsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EmbeddingsResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "SimilarityResult": {
        "type": "object",
        "description": "The similarity results.\n",
        "properties": {
          "score": {
            "type": "number",
            "description": "A similarity score between the source and target text.\n"
          }
        },
        "required": [
          "score"
        ]
      },
      "SimilarityResponseFields": {
        "type": "object",
        "description": "The similarity scores per source string.\n",
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "results": {
            "type": "array",
            "description": "The similarity scores.\n",
            "items": {
              "$ref": "#/components/schemas/SimilarityResult"
            },
            "minItems": 0
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "input_token_count": {
            "$ref": "#/components/schemas/InputTokenCount"
          }
        },
        "required": [
          "model_id",
          "results",
          "created_at",
          "input_token_count"
        ]
      },
      "SimilarityResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimilarityResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "RerankInput": {
        "type": "object",
        "description": "A text to rank.\n",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text to rank.\n"
          }
        },
        "required": [
          "text"
        ]
      },
      "RerankQuery": {
        "type": "string",
        "description": "The rank query.\n"
      },
      "RerankedResults": {
        "type": "object",
        "description": "The ranking score for the input.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/RerankInput"
          },
          "score": {
            "type": "number",
            "description": "The score of the input.\n"
          }
        },
        "required": [
          "score"
        ]
      },
      "RerankResponseFields": {
        "type": "object",
        "description": "The ranked results.\n",
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "query": {
            "$ref": "#/components/schemas/RerankQuery"
          },
          "results": {
            "description": "The ranked results.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RerankedResults"
            },
            "minItems": 0
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "input_token_count": {
            "$ref": "#/components/schemas/InputTokenCount"
          }
        },
        "required": [
          "model_id",
          "results",
          "created_at",
          "input_token_count"
        ]
      },
      "RerankResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RerankResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "ModerationInputProperties": {
        "type": "object",
        "description": "The properties for the moderation. Each type of moderation\nmay have additional properties that are specific to that moderation.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/TextModeration"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ModerationHapInputProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModerationInputProperties"
          },
          {
            "$ref": "#/components/schemas/HapProperties"
          }
        ]
      },
      "ModerationPiiInputProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModerationInputProperties"
          },
          {
            "$ref": "#/components/schemas/PiiProperties"
          }
        ]
      },
      "CommonPatchRequestHelper": {
        "type": "object",
        "description": "The common fields that can be patched.\nThis is a helper for `cpdctl`.\n",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource.\n",
            "example": "my-resource"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.\n",
            "example": "This is my first resource."
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          }
        }
      },
      "wxPromptResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The prompt's id. This value cannot be set. It is returned in responses only.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the prompt.",
            "example": "My Prompt"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the prompt.",
            "example": "My First Prompt"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the prompt was created.",
            "example": 1711504485261
          },
          "created_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the original prompt creator.",
            "example": "IBMid-000000YYY0"
          },
          "last_updated_at": {
            "type": "integer",
            "description": "Time the prompt was updated.",
            "example": 1711504485261
          },
          "last_updated_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the last user that modifed the prompt.",
            "example": "IBMid-000000YYY0"
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "governance_tracked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/promptLock"
          },
          "input_mode": {
            "type": "string",
            "description": "Input mode in use for the prompt",
            "enum": [
              "structured",
              "freeform",
              "chat",
              "detached"
            ]
          },
          "model_version": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "description": "User provided semantic version for tracking in IBM AI Factsheets",
                "example": "2.0.0-rc.7"
              },
              "tag": {
                "type": "string",
                "pattern": ".*",
                "description": "User provived tag.",
                "example": "tag"
              },
              "description": {
                "type": "string",
                "pattern": ".*",
                "description": "Description of the version.",
                "example": "Description of the model version."
              }
            }
          },
          "prompt_variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariable"
            }
          },
          "is_template": {
            "type": "boolean"
          },
          "resource_key": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*"
          },
          "prompt": {
            "$ref": "#/components/schemas/promptWithExternal"
          }
        },
        "required": [
          "name",
          "prompt"
        ]
      },
      "wxPromptPost": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the prompt.",
            "example": "My Prompt"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the prompt.",
            "example": "My First Prompt"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the prompt was created.",
            "example": 1711504485261
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "lock": {
            "$ref": "#/components/schemas/promptLock"
          },
          "model_version": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "description": "User provided semantic version for tracking in IBM AI Factsheets",
                "example": "2.0.0-rc.7"
              },
              "tag": {
                "type": "string",
                "pattern": ".*",
                "description": "User provived tag.",
                "example": "tag"
              },
              "description": {
                "type": "string",
                "pattern": ".*",
                "description": "Description of the version.",
                "example": "Description of the model version."
              }
            }
          },
          "prompt_variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariable"
            }
          },
          "input_mode": {
            "type": "string",
            "description": "Input mode in use for the prompt",
            "enum": [
              "structured",
              "freeform",
              "chat",
              "detached"
            ]
          },
          "prompt": {
            "$ref": "#/components/schemas/promptWithExternal"
          }
        },
        "required": [
          "name",
          "prompt"
        ]
      },
      "wxPromptPatch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The prompt's id. This value cannot be set. It is returned in responses only.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the prompt.",
            "example": "My Prompt"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the prompt.",
            "example": "My First Prompt"
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "generation"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "governance_tracked": {
            "type": "boolean"
          },
          "model_version": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "description": "User provided semantic version for tracking in IBM AI Factsheets",
                "example": "2.0.0-rc.7"
              },
              "tag": {
                "type": "string",
                "pattern": ".*",
                "description": "User provived tag.",
                "example": "tag"
              },
              "description": {
                "type": "string",
                "pattern": ".*",
                "description": "Description of the version.",
                "example": "Description of the model version."
              }
            }
          },
          "prompt_variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariable"
            }
          },
          "input_mode": {
            "type": "string",
            "description": "Input mode in use for the prompt",
            "enum": [
              "structured",
              "freeform"
            ]
          },
          "prompt": {
            "$ref": "#/components/schemas/prompt"
          }
        },
        "required": [
          "name",
          "prompt"
        ]
      },
      "wxPromptSession": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]{32}",
            "description": "The prompt session's id. This value cannot be set. It is returned in responses only.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "name": {
            "type": "string",
            "pattern": "^.{0,100}$",
            "description": "Name used to display the prompt session.",
            "example": "Session 1"
          },
          "description": {
            "type": "string",
            "pattern": "^[\\s\\S]{0,250}",
            "description": "An optional description for the prompt session.",
            "example": "My First Prompt Session"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the session was created.",
            "example": 1711504485261
          },
          "created_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the original session creator.",
            "example": "IBMid-000000YYY0"
          },
          "last_updated_at": {
            "type": "integer",
            "description": "Time the session was updated.",
            "example": 1711504485261
          },
          "last_updated_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the last user that modifed the session.",
            "example": "IBMid-000000YYY0"
          },
          "lock": {
            "$ref": "#/components/schemas/promptLock"
          },
          "prompts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/wxPromptSessionEntry"
            },
            "minItems": 0,
            "maxItems": 50
          }
        },
        "required": [
          "name"
        ]
      },
      "wxPromptSessionEntry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The prompt's id. This value cannot be set. It is returned in responses only.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the prompt.",
            "example": "My Prompt"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the prompt.",
            "example": "My First Prompt"
          },
          "prompt_variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariable"
            }
          },
          "is_template": {
            "type": "boolean"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the prompt was created.",
            "example": 1711504485261
          },
          "input_mode": {
            "type": "string",
            "description": "Input mode in use for the prompt",
            "enum": [
              "structured",
              "freeform",
              "chat"
            ]
          },
          "prompt": {
            "$ref": "#/components/schemas/prompt"
          }
        },
        "required": [
          "name",
          "prompt",
          "created_at"
        ]
      },
      "wxPromptSessionEntryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*",
                  "description": "The prompt entry's ID",
                  "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
                },
                "name": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*",
                  "description": "The prompt entry's name",
                  "example": "Name of an entry"
                },
                "description": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*",
                  "description": "The prompt entry's description",
                  "example": "Description of an entry"
                },
                "created_at": {
                  "type": "integer",
                  "description": "The prompt entry's create time in millis",
                  "example": 1711504485261
                }
              }
            }
          },
          "bookmark": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*"
          }
        }
      },
      "prompt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "default": []
          },
          "model_id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-//]*",
            "example": "ibm/granite-13b-chat-v2"
          },
          "model_parameters": {
            "type": "object",
            "properties": {
              "decoding_method": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*"
              },
              "max_new_tokens": {
                "type": "integer"
              },
              "min_new_tokens": {
                "type": "integer"
              },
              "random_seed": {
                "type": "integer"
              },
              "stop_sequences": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*"
                }
              },
              "temperature": {
                "type": "number"
              },
              "top_k": {
                "type": "number"
              },
              "top_p": {
                "type": "number"
              },
              "repetition_penalty": {
                "type": "number"
              }
            }
          },
          "data": {
            "$ref": "#/components/schemas/promptData"
          },
          "system_prompt": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*"
          },
          "chat_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/chatItem"
            }
          }
        },
        "required": [
          "model_id",
          "data"
        ]
      },
      "promptWithExternal": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "default": []
          },
          "model_id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-//]*",
            "example": "ibm/granite-13b-chat-v2"
          },
          "model_parameters": {
            "type": "object",
            "properties": {
              "decoding_method": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*"
              },
              "max_new_tokens": {
                "type": "integer"
              },
              "min_new_tokens": {
                "type": "integer"
              },
              "random_seed": {
                "type": "integer"
              },
              "stop_sequences": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*"
                }
              },
              "temperature": {
                "type": "number"
              },
              "top_k": {
                "type": "number"
              },
              "top_p": {
                "type": "number"
              },
              "repetition_penalty": {
                "type": "number"
              }
            }
          },
          "data": {
            "$ref": "#/components/schemas/promptData"
          },
          "system_prompt": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*"
          },
          "chat_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/chatItem"
            }
          },
          "external_information": {
            "$ref": "#/components/schemas/externalInformation"
          }
        },
        "required": [
          "model_id",
          "data"
        ]
      },
      "externalInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "external_prompt_id": {
            "type": "string",
            "pattern": ".*"
          },
          "external_model_id": {
            "type": "string",
            "pattern": ".*"
          },
          "external_model_provider": {
            "type": "string",
            "pattern": ".*"
          },
          "external_prompt": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string",
                "pattern": ".*"
              },
              "additional_information": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/externalPromptAdditionalInformation"
                },
                "minItems": 1
              }
            },
            "required": [
              "url"
            ]
          },
          "external_model": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "pattern": ".*"
              },
              "url": {
                "type": "string",
                "pattern": ".*"
              }
            },
            "required": [
              "name",
              "url"
            ]
          }
        },
        "required": [
          "external_prompt_id",
          "external_model_id",
          "external_model_provider"
        ]
      },
      "externalPromptAdditionalInformation": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "key": {
              "type": "string",
              "pattern": "^[\\s\\S]{0,250}$"
            }
          }
        },
        "example": [
          {
            "key": "value"
          },
          {
            "key": "value"
          }
        ]
      },
      "chatItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "question",
              "answer"
            ]
          },
          "content": {
            "type": "string",
            "pattern": ".*",
            "example": "Some text"
          },
          "status": {
            "type": "string",
            "enum": [
              "ready",
              "error"
            ]
          },
          "timestamp": {
            "type": "integer",
            "example": 1711504485261
          }
        }
      },
      "promptData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "instruction": {
            "type": "string",
            "pattern": "[\\s\\S]*"
          },
          "input_prefix": {
            "type": "string",
            "pattern": "[\\s\\S]*"
          },
          "output_prefix": {
            "type": "string",
            "pattern": "[\\s\\S]*"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[\\s\\S]*"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "default": []
          }
        }
      },
      "promptLock": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "locked": {
            "type": "boolean",
            "description": "True if the prompt is currently locked."
          },
          "lock_type": {
            "type": "string",
            "description": "Lock type: 'edit' for working on prompts/templates or 'governance'. Can only be supplied in PUT /lock requests.",
            "enum": [
              "edit",
              "governance"
            ]
          },
          "locked_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Locked by is computed by the server and shouldn't be passed.",
            "example": "IBMid-000000YYY0"
          }
        },
        "required": [
          "locked"
        ]
      },
      "wxPromptInputRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input": {
            "type": "string",
            "pattern": ".*",
            "description": "Override input string that will be used to generate the response. The string can contain template parameters.",
            "example": "Some text with variables."
          },
          "prompt_variables": {
            "type": "object",
            "description": "Supply only to replace placeholders. Object content must be key:value pairs where the 'key' is the parameter to replace and 'value' is the value to use.",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariableString"
            }
          }
        }
      },
      "promptVariable": {
        "type": "object",
        "additionalProperties": true
      },
      "promptVariableString": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]*",
        "example": "var1"
      },
      "NotebookInProject": {
        "description": "Notebook information in a project as returned by a GET request.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookMetadataInProject"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookEntity"
          }
        }
      },
      "NotebooksResourceList": {
        "description": "A list of notebook info as returned by a list query.",
        "required": [
          "total_results",
          "resources"
        ],
        "properties": {
          "total_results": {
            "type": "integer",
            "description": "The number of items in the resources list.",
            "example": 1
          },
          "resources": {
            "type": "array",
            "description": "An array of notebooks.",
            "items": {
              "$ref": "#/components/schemas/NotebookResource"
            }
          }
        }
      },
      "Notebook": {
        "description": "Notebook information as returned by a GET request.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookMetadata"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookEntity"
          }
        }
      },
      "NotebookForCopy": {
        "description": "Information of a copied notebook as returned by a GET request.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookMetadataInProject"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookEntityForCopy"
          }
        }
      },
      "NotebookMetadata": {
        "description": "Metadata of a notebook.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the notebook.",
            "example": "my notebook"
          },
          "description": {
            "type": "string",
            "description": "A more verbose description.",
            "example": "this is my notebook"
          },
          "asset_type": {
            "type": "string",
            "description": "Asset type, always \"notebook\".",
            "example": "notebook"
          },
          "created": {
            "type": "integer",
            "description": "Creation date, ms since epoch.",
            "example": 1540471021134
          },
          "created_at": {
            "type": "string",
            "description": "Creation date, ISO format.",
            "example": "2018-10-25T12:37:01Z"
          },
          "owner_id": {
            "type": "string",
            "description": "IAM ID of the asset's owner.",
            "example": "IBMid-310000SG2Y"
          },
          "catalog_id": {
            "type": "string",
            "description": "UUID of the asset's catalog.",
            "example": "463cb8d8-8480-4a98-b75a-f7443b7d0af9"
          },
          "asset_id": {
            "type": "string",
            "description": "UUID of the asset.",
            "example": "41d09a9a-f771-48a2-9534-50c0c622356d"
          }
        }
      },
      "NotebookMetadataInProject": {
        "description": "Metadata of a notebook in a project.",
        "allOf": [
          {
            "$ref": "#/components/schemas/NotebookMetadata"
          },
          {
            "required": [
              "project_id"
            ],
            "properties": {
              "project_id": {
                "type": "string",
                "description": "UUID of the asset's project.",
                "example": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
              }
            }
          }
        ]
      },
      "NotebookEntity": {
        "description": "Entity of a notebook.",
        "properties": {
          "notebook": {
            "$ref": "#/components/schemas/NotebookEntityDefinition"
          },
          "runtime": {
            "$ref": "#/components/schemas/NotebookRuntime"
          },
          "href": {
            "type": "string",
            "description": "Full URI of the notebook.",
            "example": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookEntityForCopy": {
        "description": "Entity of a notebook copied from a source.",
        "properties": {
          "notebook": {
            "$ref": "#/components/schemas/NotebookEntityDefinitionForCopy"
          },
          "runtime": {
            "$ref": "#/components/schemas/NotebookRuntime"
          },
          "href": {
            "type": "string",
            "description": "Full URI of the notebook.",
            "example": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookEntityDefinition": {
        "description": "Definition part of a notebook entity.",
        "properties": {
          "kernel": {
            "$ref": "#/components/schemas/NotebookKernel"
          },
          "originates_from": {
            "$ref": "#/components/schemas/NotebookOrigin"
          }
        }
      },
      "NotebookEntityDefinitionForCopy": {
        "description": "Definition part of a notebook entity copied from a source.",
        "properties": {
          "kernel": {
            "$ref": "#/components/schemas/NotebookKernel"
          },
          "originates_from": {
            "$ref": "#/components/schemas/NotebookOriginFromSource"
          }
        }
      },
      "NotebookResource": {
        "description": "Notebook info returned in a listing.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookResourceMetadata"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookResourceEntity"
          }
        }
      },
      "NotebookResourceMetadata": {
        "description": "Metadata of notebook info returned in a listing.",
        "properties": {
          "guid": {
            "type": "string",
            "description": "UUID of the notebook.",
            "example": "299993bf-9a42-48ae-aadd-1336f31d5556"
          },
          "url": {
            "type": "string",
            "description": "URL of the notebook.",
            "example": "/v2/notebooks/299993bf-9a42-48ae-aadd-1336f31d5556"
          }
        }
      },
      "NotebookResourceEntity": {
        "description": "Entity of notebook info returned in a listing.",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/NotebookResourceEntityAsset"
          },
          "runtime": {
            "$ref": "#/components/schemas/NotebookResourceEntityRuntime"
          }
        }
      },
      "NotebookResourceEntityAsset": {
        "description": "Asset API asset description returned with a notebook listing.",
        "properties": {
          "asset_id": {
            "type": "string",
            "description": "The UUID of the asset.",
            "example": "41d09a9a-f771-48a2-9534-50c0c622356d"
          },
          "asset_type": {
            "type": "string",
            "description": "The asset type. Always \"notebook\".",
            "example": "notebook"
          },
          "created": {
            "type": "integer",
            "description": "Timestamp of the creation date, ms since epoch.",
            "example": 1540471021134
          },
          "created_at": {
            "type": "string",
            "description": "Date the asset was created, ISO format.",
            "example": "2018-10-25T12:37:01Z"
          },
          "catalog_id": {
            "type": "string",
            "description": "The asset catalog ID.",
            "example": "463cb8d8-8480-4a98-b75a-f7443b7d0af9"
          },
          "project_id": {
            "type": "string",
            "description": "The project the notebook belongs to.",
            "example": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "version": {
            "type": "integer",
            "description": "Version of the asset.",
            "example": 2
          },
          "href": {
            "type": "string",
            "description": "The asset URL.",
            "example": "/v2/assets/299993bf-9a42-48ae-aadd-1336f31d5556?project_id=850d08c4-31f1-4722-a7ef-eeefd796e995"
          }
        }
      },
      "NotebookResourceEntityRuntime": {
        "description": "Runtime info returned with a notebook listing.",
        "properties": {
          "spark_monitoring_enabled": {
            "type": "boolean",
            "description": "If Spark monitoring is enabled.",
            "example": true
          },
          "environment": {
            "type": "string",
            "description": "UUID of the environment of the notebook.",
            "example": "conda4x16-850d08c4-31f1-4722-a7ef-eeefd796e995"
          }
        }
      },
      "NotebookCreateBodyInProject": {
        "description": "Payload for creating a notebook in a project.",
        "allOf": [
          {
            "$ref": "#/components/schemas/NotebookCreateBodyGeneral"
          },
          {
            "required": [
              "project"
            ],
            "properties": {
              "project": {
                "type": "string",
                "description": "The guid of the project in which to create the notebook.",
                "example": "92ae0e27-9b11-4de9-a646-d46ca3c183d4"
              }
            }
          }
        ]
      },
      "NotebookCreateBodyGeneral": {
        "description": "Payload for creating a notebook.",
        "required": [
          "name",
          "file_reference",
          "runtime"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the new notebook.",
            "example": "my notebook"
          },
          "description": {
            "type": "string",
            "description": "A more verbose description of the notebook.",
            "example": "this is my notebook"
          },
          "file_reference": {
            "type": "string",
            "description": "The reference to the file in the object storage.",
            "example": "notebook/my_notebook.ipynb"
          },
          "originates_from": {
            "$ref": "#/components/schemas/NotebookOrigin"
          },
          "runtime": {
            "$ref": "#/components/schemas/NotebookRuntime"
          },
          "kernel": {
            "$ref": "#/components/schemas/NotebookKernel"
          }
        }
      },
      "NotebookCopyBody": {
        "description": "Payload for copying a notebook.",
        "required": [
          "source_guid",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the new notebook.",
            "example": "my notebook"
          },
          "source_guid": {
            "type": "string",
            "description": "The guid of the notebook to be copied.",
            "example": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
          }
        }
      },
      "NotebookRevertBody": {
        "description": "Payload for a request to revert to a specific notebook version.",
        "required": [
          "source"
        ],
        "properties": {
          "source": {
            "type": "string",
            "description": "The guid of the notebook version.",
            "example": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
          }
        }
      },
      "NotebookOrigin": {
        "description": "The notebook origin.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The orgin type of the notebook, either blank, file or url.",
            "example": "blank"
          }
        }
      },
      "NotebookOriginFromSource": {
        "description": "The origin of a notebook from a source.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The orgin type of the notebook, either blank, file or url.",
            "example": "notebook"
          },
          "guid": {
            "type": "string",
            "description": "The guid of the source file",
            "example": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
          }
        }
      },
      "NotebookRuntime": {
        "description": "A notebook runtime.",
        "required": [
          "environment"
        ],
        "properties": {
          "environment": {
            "type": "string",
            "description": "The guid of the environment on which the notebook runs.",
            "example": "conda4x16-d46ca0e27-a646-4de9-a646-9b113c183d4"
          },
          "spark_monitoring_enabled": {
            "type": "boolean",
            "description": "Spark monitoring enabled or not."
          }
        }
      },
      "NotebookKernel": {
        "description": "A notebook kernel.",
        "properties": {
          "display_name": {
            "type": "string",
            "description": "The display name of the environment kernel.",
            "example": "Python 3.9 with Spark"
          },
          "name": {
            "type": "string",
            "description": "The name of the environment kernel.",
            "example": "python3"
          },
          "language": {
            "type": "string",
            "description": "The language of the environment kernel.",
            "example": "python3"
          }
        }
      },
      "NotebookListBody": {
        "description": "Payload for a notebook list request.",
        "properties": {
          "notebooks": {
            "type": "array",
            "description": "The list of notebooks whose details will be retrieved.",
            "items": {
              "type": "string",
              "description": "The guid of the notebook.",
              "example": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
            }
          }
        }
      },
      "NotebookUpdateBody": {
        "description": "Payload for a notebook update request.",
        "properties": {
          "environment": {
            "type": "string",
            "description": "The guid of the environment on which the notebook runs.",
            "example": "d46ca0e27-a646-4de9-a646-9b113c183d4"
          },
          "spark_monitoring_enabled": {
            "type": "boolean",
            "description": "Spark monitoring enabled or not.",
            "example": false
          },
          "kernel": {
            "$ref": "#/components/schemas/NotebookKernel"
          }
        }
      },
      "NotebookVersionInProject": {
        "description": "A notebook version in a project.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookVersionMetadata"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookVersionEntityInProject"
          }
        }
      },
      "NotebookVersionMetadata": {
        "description": "Notebook version metadata.",
        "properties": {
          "guid": {
            "type": "string",
            "description": "The guid of the version.",
            "example": "19d63b6b-81a1-4c05-bad2-36a2957bd6d0"
          },
          "url": {
            "type": "string",
            "description": "The URL of the version.",
            "example": "v2/notebooks/a528b427-d1cd-4039-8ddc-04203c2521e2/versions/1a1329e0-fd05-409a-8411-52db106e2142"
          },
          "created_at": {
            "type": "integer",
            "description": "The creation timestamp in UTC millisecond since UNIX Epoch time.",
            "example": 1543681714106
          }
        }
      },
      "NotebookVersionEntity": {
        "description": "A notebook version entity.",
        "properties": {
          "master_notebook_guid": {
            "type": "string",
            "description": "The guid of the versioned notebook.",
            "example": "a528b427-d1cd-4039-8ddc-04203c2521e2"
          },
          "created_by_iui": {
            "type": "string",
            "description": "The IUI of the user that has created the version.",
            "example": "IBMid-123456ABCD"
          },
          "file_reference": {
            "type": "string",
            "description": "The file reference in the corresponding COS.",
            "example": "myproject-donotdelete-pr-6p65nym92j1bv0/notebooks/GPU_ENVIRONMENT_DEFAULT_GBUXVKHH_version_1543781324804.ipynb"
          },
          "rev_id": {
            "type": "integer",
            "description": "The revision id of the notebook.",
            "example": 1
          }
        }
      },
      "NotebookVersionEntityInProject": {
        "description": "A notebook version entity in a project.",
        "allOf": [
          {
            "$ref": "#/components/schemas/NotebookVersionEntity"
          },
          {
            "required": [
              "project_id"
            ],
            "properties": {
              "project_id": {
                "type": "string",
                "description": "The guid of the project.",
                "example": "0f7c1111-a79d-45b2-9699-d4950e742964"
              }
            }
          }
        ]
      },
      "NotebookVersionsListInProject": {
        "description": "A list of notebook versions in a project.",
        "required": [
          "total_results",
          "resources"
        ],
        "properties": {
          "total_results": {
            "description": "The number of items in the resources array.",
            "type": "integer",
            "example": 1
          },
          "resources": {
            "description": "An array of notebook versions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotebookVersionInProject"
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "An error response.",
        "required": [
          "trace",
          "errors"
        ],
        "properties": {
          "trace": {
            "description": "The trace ID used in logs.",
            "type": "string"
          },
          "errors": {
            "description": "The error objects.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Error": {
        "description": "An error object.",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "description": "The code describing the error.",
            "type": "string"
          },
          "message": {
            "description": "The detailed information about the error.",
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/ErrorTarget"
          }
        }
      },
      "ErrorTarget": {
        "description": "The target of the error.",
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "type": {
            "description": "The type of the problematic field.",
            "type": "string",
            "enum": [
              "field",
              "query",
              "header"
            ]
          },
          "name": {
            "description": "The name of the problematic field.",
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "version": {
        "name": "version",
        "description": "The version date for the API of the form `YYYY-MM-DD`.\n",
        "example": "2023-07-07",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date"
        },
        "required": true,
        "x-sdk-global-param": true
      },
      "start": {
        "name": "start",
        "description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200.",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 100
        },
        "example": 50
      },
      "model_filters": {
        "name": "filters",
        "description": "A set of filters to specify the list of models, filters are described as the `pattern` shown below.\n```text\n pattern: tfilter[,tfilter][:(or|and)]\n tfilter: filter | !filter\n   filter: Requires existence of the filter.\n   !filter: Requires absence of the filter.\n filter: one of\n   modelid_*:     Filters by model id.\n                  Namely, select a model with a specific model id.\n   provider_*:    Filters by provider.\n                  Namely, select all models with a specific provider.\n   source_*:      Filters by source.\n                  Namely, select all models with a specific source.\n   input_tier_*:  Filters by input tier.\n                  Namely, select all models with a specific input tier.\n   output_tier_*: Filters by output tier.\n                  Namely, select all models with a specific output tier.\n   tier_*:        Filters by tier.\n                  Namely, select all models with a specific input or output tier.\n   task_*:        Filters by task id.\n                  Namely, select all models that support a specific task id.\n   lifecycle_*:   Filters by lifecycle state.\n                  Namely, select all models that are currently in the specified lifecycle state.\n   function_*:    Filters by function. \n                  Namely, select all models that support a specific function.\n```",
        "in": "query",
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1000,
          "pattern": "^([!]?[^,!]+)(,[!]?[^,!]+)*(:(or|and))?$"
        },
        "example": "modelid_ibm/granite-13b-instruct-v2"
      },
      "SpaceId": {
        "name": "space_id",
        "description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n",
        "in": "query",
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*",
          "minLength": 36,
          "maxLength": 36
        },
        "example": "63dc4cf1-252f-424b-b52d-5cdd9814987f"
      },
      "ProjectId": {
        "name": "project_id",
        "description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n",
        "in": "query",
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*",
          "minLength": 36,
          "maxLength": 36
        },
        "example": "a77190a2-f52d-4f2a-be3d-7867b5f46edc"
      },
      "id_or_name": {
        "name": "id_or_name",
        "in": "path",
        "description": "The `id_or_name` can be either the `deployment_id` that identifies the deployment\nor a `serving_name` that allows a predefined URL to be used to post a prediction.\n\nThe `project` or `space` for the deployment must have a WML instance that\nwill be used for limits and billing (if a paid plan).\n",
        "schema": {
          "type": "string"
        },
        "required": true,
        "example": "classification"
      },
      "total_count": {
        "name": "total_count",
        "description": "Compute the total count. May have performance impact.",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      },
      "hard_delete": {
        "name": "hard_delete",
        "description": "Set to true in order to also delete the job metadata information.",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      },
      "session_id": {
        "name": "session_id",
        "in": "path",
        "description": "Prompt Session ID",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "entry_id": {
        "name": "entry_id",
        "in": "path",
        "description": "Prompt Session Entry ID",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "prompt_id": {
        "name": "prompt_id",
        "in": "path",
        "description": "Prompt ID",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "project_id": {
        "name": "project_id",
        "in": "query",
        "description": "[REQUIRED] Specifies the project ID as the target. One target must be supplied per request.",
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "space_id": {
        "name": "space_id",
        "in": "query",
        "description": "[REQUIRED] Specifies the space ID as the target. One target must be supplied per request.",
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "restrict_model_parameters": {
        "name": "restrict_model_parameters",
        "in": "query",
        "description": "Only return a set of model parameters compatiable with inferencing",
        "required": false,
        "schema": {
          "type": "string",
          "default": "true"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request, the response body should contain the reason.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden, an authentication error including trying to access an unauthorized space or project.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "HTTP400Response": {
        "description": "Bad request. One of the fields has invalid format/content.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "BadRequestError": {
                "$ref": "#/components/examples/BadRequestError"
              }
            }
          }
        }
      },
      "HTTP401Response": {
        "description": "Unauthorized. No/Malformed authentication provided.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "AuthenticationError": {
                "$ref": "#/components/examples/AuthenticationError"
              }
            }
          }
        }
      },
      "HTTP403Response": {
        "description": "Forbidden. User is not allowed to perform the target operation.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "AuthorizationError": {
                "$ref": "#/components/examples/AuthorizationError"
              }
            }
          }
        }
      },
      "HTTP429Response": {
        "description": "The number of requests has exceeded the rate limit.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "RateLimitError": {
                "$ref": "#/components/examples/RateLimitError"
              }
            }
          }
        }
      },
      "NotebookCreateResponse": {
        "description": "Success. Created and returned a new notebook asset. Format follows v2/assets.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookInProject"
                },
                {
                  "$ref": "#/components/schemas/NotebookForCopy"
                }
              ]
            },
            "examples": {
              "NotebookCreatedFromScratchInProject": {
                "$ref": "#/components/examples/NotebookInProject"
              },
              "NotebookCreatedByCopying": {
                "$ref": "#/components/examples/NotebookForCopy"
              }
            }
          }
        }
      },
      "NotebooksListResponse": {
        "description": "Success. Returned a list of notebook assets. Format follows v2/assets.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotebooksResourceList"
            },
            "examples": {
              "ListOfNotebooks": {
                "$ref": "#/components/examples/NotebooksList"
              }
            }
          }
        }
      },
      "NotebookRevertResponse": {
        "description": "Success. Reverted the main notebook to a version. Format follows v2/assets.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookInProject"
                }
              ]
            },
            "examples": {
              "NotebookReverted": {
                "$ref": "#/components/examples/NotebookReverted"
              }
            }
          }
        }
      },
      "NotebookUpdateResponse": {
        "description": "Success. Updated the notebook. Format follows v2/assets.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notebook"
            },
            "examples": {
              "NotebookUpdated": {
                "$ref": "#/components/examples/NotebookUpdated"
              }
            }
          }
        }
      },
      "NotebookVersionCreateResponse": {
        "description": "Success. Returned the notebook version definition.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookVersionInProject"
                }
              ]
            },
            "examples": {
              "NotebookVersionInProject": {
                "$ref": "#/components/examples/NotebookVersionInProject"
              }
            }
          }
        }
      },
      "NotebookVersionsListResponse": {
        "description": "Success. Returned a list of versions of the notebook.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookVersionsListInProject"
                }
              ]
            },
            "examples": {
              "ListOfNotebookVersionsInProject": {
                "$ref": "#/components/examples/NotebookVersionsListInProject"
              }
            }
          }
        }
      },
      "NotebookVersionRetrieveResponse": {
        "description": "Success. Returned the version definition.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookVersionInProject"
                }
              ]
            },
            "examples": {
              "NotebookVersionInProject": {
                "$ref": "#/components/examples/NotebookVersionInProject"
              }
            }
          }
        }
      }
    },
    "examples": {
      "NotebookCreateBodyInProject": {
        "summary": "Create a notebook from scratch in a project",
        "value": {
          "name": "my notebook",
          "description": "this is my notebook",
          "project": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
          "file_reference": "notebook/my_notebook.ipynb",
          "runtime": {
            "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
            "spark_monitoring_enabled": true
          }
        }
      },
      "NotebookCopyBody": {
        "summary": "Copy a notebook",
        "value": {
          "source_guid": "ca3c0e27-46ca-83d4-a646-d49b11c14de9",
          "name": "my notebook"
        }
      },
      "NotebooksListBody": {
        "summary": "List notebooks",
        "value": {
          "notebooks": [
            "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
          ]
        }
      },
      "NotebookRevertBody": {
        "summary": "Revert the notebook to a version",
        "value": {
          "source": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
        }
      },
      "NotebookUpdateBody": {
        "summary": "Update a notebook",
        "value": {
          "environment": "d46ca0e27-a646-4de9-a646-9b113c183d4",
          "spark_monitoring_enabled": false,
          "kernel": {
            "display_name": "Python 3.9 with Spark",
            "name": "python39",
            "language": "python3"
          }
        }
      },
      "NotebookInProject": {
        "summary": "A notebook created in a project from scratch",
        "value": {
          "metadata": {
            "name": "my notebook",
            "description": "this is my notebook",
            "asset_type": "notebook",
            "created": 1540471021134,
            "created_at": "2021-07-01T12:37:01Z",
            "owner_id": "IBMid-310000SG2Y",
            "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
            "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
            "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "entity": {
            "notebook": {
              "kernel": {
                "display_name": "Python 3.9 with Spark",
                "name": "python3",
                "language": "python3"
              },
              "originates_from": {
                "type": "blank"
              }
            },
            "runtime": {
              "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
              "spark_monitoring_enabled": true
            },
            "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookForCopy": {
        "summary": "A notebook created by copying another notebook",
        "value": {
          "metadata": {
            "name": "my notebook",
            "description": "this is my notebook",
            "asset_type": "notebook",
            "created": 1540471021134,
            "created_at": "2021-07-01T12:37:01Z",
            "owner_id": "IBMid-310000SG2Y",
            "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
            "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
            "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "entity": {
            "notebook": {
              "kernel": {
                "display_name": "Python 3.9 with Spark",
                "name": "python3",
                "language": "python3"
              },
              "originates_from": {
                "type": "notebook",
                "guid": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
              }
            },
            "runtime": {
              "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
              "spark_monitoring_enabled": true
            },
            "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebooksList": {
        "summary": "A list of notebooks",
        "value": {
          "total_results": 1,
          "resources": [
            {
              "metadata": {
                "guid": "41d09a9a-f771-48a2-9534-50c0c622356d",
                "url": "/v2/notebooks/41d09a9a-f771-48a2-9534-50c0c622356d"
              },
              "entity": {
                "runtime": {
                  "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
                  "spark_monitoring_enabled": true
                },
                "asset": {
                  "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
                  "asset_type": "notebook",
                  "created_at": "2021-07-01T12:37:01Z",
                  "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
                  "version": 2,
                  "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
                  "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
                }
              }
            }
          ]
        }
      },
      "NotebookReverted": {
        "summary": "A reverted notebook",
        "value": {
          "metadata": {
            "name": "my notebook v4.2",
            "description": "this is my notebook v4.2",
            "asset_type": "notebook",
            "created": 1540471021134,
            "created_at": "2021-07-01T12:37:01Z",
            "owner_id": "IBMid-310000SG2Y",
            "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
            "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
            "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "entity": {
            "notebook": {
              "kernel": {
                "display_name": "Python 3.9 with Spark",
                "name": "python39",
                "language": "python3"
              },
              "originates_from": {
                "type": "blank"
              }
            },
            "runtime": {
              "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
              "spark_monitoring_enabled": true
            },
            "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookUpdated": {
        "summary": "An updated notebook",
        "value": {
          "metadata": {
            "name": "my notebook",
            "description": "this is my notebook",
            "asset_type": "notebook",
            "created": 1540471021134,
            "created_at": "2021-07-01T12:37:01Z",
            "owner_id": "IBMid-310000SG2Y",
            "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
            "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
            "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "entity": {
            "notebook": {
              "kernel": {
                "display_name": "Python 3.9 with Spark",
                "name": "python39",
                "language": "python3"
              },
              "originates_from": {
                "type": "blank"
              }
            },
            "runtime": {
              "environment": "d46ca0e27-a646-4de9-a646-9b113c183d4",
              "spark_monitoring_enabled": false
            },
            "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookVersionInProject": {
        "summary": "A notebook version in a project",
        "value": {
          "metadata": {
            "guid": "19d63b6b-81a1-4c05-bad2-36a2957bd6d0",
            "url": "v2/notebooks/a528b427-d1cd-4039-8ddc-04203c2521e2/versions/1a1329e0-fd05-409a-8411-52db106e2142",
            "created_at": 1543681714106
          },
          "entity": {
            "master_notebook_guid": "a528b427-d1cd-4039-8ddc-04203c2521e2",
            "project_id": "0f7c1111-a79d-45b2-9699-d4950e742964",
            "created_by_iui": "IBMid-123456ABCD",
            "file_reference": "myproject-donotdelete-pr-6p65nym92j1bv0/notebooks/GPU_ENVIRONMENT_DEFAULT_GBUXVKHH_version_1543781324804.ipynb",
            "rev_id": 1
          }
        }
      },
      "NotebookVersionsListInProject": {
        "summary": "A list of notebook versions in a project",
        "value": {
          "total_results": 1,
          "resources": [
            {
              "metadata": {
                "guid": "19d63b6b-81a1-4c05-bad2-36a2957bd6d0",
                "url": "v2/notebooks/a528b427-d1cd-4039-8ddc-04203c2521e2/versions/1a1329e0-fd05-409a-8411-52db106e2142",
                "created_at": 1543681714106
              },
              "entity": {
                "master_notebook_guid": "a528b427-d1cd-4039-8ddc-04203c2521e2",
                "project_id": "0f7c1111-a79d-45b2-9699-d4950e742964",
                "created_by_iui": "IBMid-123456ABCD",
                "file_reference": "myproject-donotdelete-pr-6p65nym92j1bv0/notebooks/GPU_ENVIRONMENT_DEFAULT_GBUXVKHH_version_1543781324804.ipynb",
                "rev_id": 1
              }
            }
          ]
        }
      },
      "BadRequestError": {
        "summary": "Bad request error with status code 400",
        "value": {
          "trace": "b12692e1-8582-4628-88ca-7a13fefb73e2",
          "errors": [
            {
              "code": "invalid_type",
              "message": "The `project` field needs to be a uuid v4, but is 12345.",
              "target": {
                "type": "field",
                "name": "project"
              }
            }
          ]
        }
      },
      "AuthenticationError": {
        "summary": "Authentication error with status code 401",
        "value": {
          "trace": "b12692e1-8582-4628-88ca-7a13fefb73e2",
          "errors": [
            {
              "code": "invalid_auth_token",
              "message": "The IAM bearer token is not valid.",
              "target": {
                "type": "header",
                "name": "Authentication"
              }
            }
          ]
        }
      },
      "AuthorizationError": {
        "summary": "Authorization error with status code 403",
        "value": {
          "trace": "b12692e1-8582-4628-88ca-7a13fefb73e2",
          "errors": [
            {
              "code": "endpoint_access_forbidden",
              "message": "max.mustermann@ibm.com is neither editor/admin of project b275be5f-10ff-47ee-bfc9-63f1ce5addbf nor allowlisted Service ID."
            }
          ]
        }
      },
      "RateLimitError": {
        "summary": "Rate limit error with status code 429",
        "value": {
          "trace": "b12692e1-8582-4628-88ca-7a13fefb73e2",
          "errors": [
            {
              "code": "rate_limit",
              "message": "The requests from IBMid-310000A00A exceeds rate limit. Please try again later."
            }
          ]
        }
      }
    }
  }
}